<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tyl丶的博客</title>
  
  <subtitle>记录我的生活</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-20T09:32:48.633Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>汪剑平</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Dfs搜索函数学习</title>
    <link href="http://example.com/2021/01/20/2021-1-20-Dfs%E6%90%9C%E7%B4%A2%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/01/20/2021-1-20-Dfs%E6%90%9C%E7%B4%A2%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-01-19T16:00:00.000Z</published>
    <updated>2021-01-20T09:32:48.633Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="1-我对Dfs的理解"><a href="#1-我对Dfs的理解" class="headerlink" title="1.我对Dfs的理解"></a>1.我对Dfs的理解</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.dfs的起点</span></span><br><span class="line"><span class="comment">2.某一点dfs的下一步以及进入下一步要满足的条件,还有走过路径的标记,最后跳出时要将标记还原</span></span><br><span class="line"><span class="comment">3.和递归一样要有一个终点,也就是出口让dfs跳出</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>下面我来写一个指导的模板</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> vis [<span class="number">25</span>][<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(vis[i][j])&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[i][j]=<span class="number">1</span>;  <span class="comment">//走过的地方打上标记</span></span><br><span class="line">    cnt++；</span><br><span class="line">    <span class="keyword">if</span>(!vis[i+<span class="number">1</span>][j]) dfs(i+<span class="number">1</span>,j);</span><br><span class="line">    <span class="keyword">if</span>(!vis[i<span class="number">-1</span>][j]) dfs(i<span class="number">-1</span>,j); <span class="comment">//这里就是进入下一个节点的条件</span></span><br><span class="line">    <span class="keyword">if</span>(!vis[i][j+<span class="number">1</span>]) dfs(i,j+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(!vis[i][j<span class="number">-1</span>]) dfs(i,j<span class="number">-1</span>);</span><br><span class="line">    vis[i][j]=<span class="number">0</span>;  <span class="comment">//dfs过后让原来打上的标记擦除</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="comment">//省略了二维数组的写法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,cnt);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h3 id=&quot;1-我对Dfs的理解&quot;&gt;&lt;a href=&quot;#1-我对Dfs的理解&quot; class=&quot;headerlink&quot; title=&quot;1.我对Dfs的理解&quot;&gt;&lt;/a&gt;1.我对Dfs的理解&lt;/h3&gt;&lt;figure class=&quot;highlig</summary>
      
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>Web网络安全学习</title>
    <link href="http://example.com/2021/01/07/2021-1-7-Web%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2021/01/07/2021-1-7-Web%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-01-06T16:00:00.000Z</published>
    <updated>2021-01-11T11:33:44.355Z</updated>
    
    <content type="html"><![CDATA[<p><em><u>我心如雷🌩</u></em></p><a id="more"></a><h3 id="1-IP地址详解"><a href="#1-IP地址详解" class="headerlink" title="1.IP地址详解"></a>1.IP地址详解</h3><table><thead><tr><th>子网掩码:1.255.0.0.0  2.255.255.0.0  3.255.255.255.0  回环地址:127.0.0.1 用以测试自身网卡损坏</th></tr></thead><tbody><tr><td>如:192.168.1.1  子网掩码为255.255.0.0  则该网段为192.168网段  主机位是1.1  此子网掩码有65534种</td></tr><tr><td>网关:一个网络的出口,Gateway=GW 网关一般在路由器上 同网段中通信不需要网关直接使用交换机</td></tr></tbody></table><h3 id="PC向外发包过程："><a href="#PC向外发包过程：" class="headerlink" title="PC向外发包过程："></a>PC向外发包过程：</h3><ol><li>首先判断目标IP地址与自己是否在同一网段</li><li>如果在同一网段，则直接发出去，而不找网关</li><li>如果不在同一网段，则直接发包给网关</li></ol><h3 id="DNS-Domain-Name-Service-域名服务"><a href="#DNS-Domain-Name-Service-域名服务" class="headerlink" title="DNS: Domain Name Service 域名服务"></a>DNS: Domain Name Service 域名服务</h3><p>1.如何查看IP地址</p><p>首先：开始–运行–输入cmd–进入命令窗口或者win+r打开运行窗口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipconfig        #查看IP地址基本信息</span><br><span class="line">ipconfig &#x2F;all   #查看IP地址详细信息</span><br></pre></td></tr></table></figure><p>2.测试网络连通性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ping 目标IP地址            #测试网络连通性，有去有回即为可以成功通信</span><br><span class="line">ping -t 目标IP地址         #一直ping</span><br><span class="line">ping -n 数字 目标IP地址     #修改ping包的数量</span><br><span class="line">ping -l 数字 目标IP地址     #修改ping包的大小</span><br><span class="line">注：如果ping不通，可能对方不在线，或者对方开着防火墙</span><br></pre></td></tr></table></figure><p>3.手动解析域名</p><p><code>nslookup 目标网址或者目标IP地址  #手动解析域名的IP地址 </code></p><h3 id="2-1）NTFS安全权限"><a href="#2-1）NTFS安全权限" class="headerlink" title="2.1）NTFS安全权限"></a>2.1）NTFS安全权限</h3><ol><li>通过设置NTFS权限，实现不同的用户访问不同的权限</li><li>分配了正确的访问权限后，用户才能访问其资源</li><li>设置权限防止资源被篡改、删除</li></ol><h3 id="2-2）文件系统概述"><a href="#2-2）文件系统概述" class="headerlink" title="2.2）文件系统概述"></a>2.2）文件系统概述</h3><p>文件系统即在外部存储设备上组织文件的方法–某一分区的存储格式</p><p>格式化就是定制文件</p><p>常用的文件系统：</p><ol><li>FAT         Windows</li><li>NTFS       Windows</li><li>EXT          Linux常见</li></ol><h3 id="3-DHCP部署与安全–Dynamic-Host-Configure-Protocol"><a href="#3-DHCP部署与安全–Dynamic-Host-Configure-Protocol" class="headerlink" title="3.DHCP部署与安全–Dynamic Host Configure Protocol"></a>3.DHCP部署与安全–Dynamic Host Configure Protocol</h3><ol><li><p>DHCP作用：自动分配IP地址</p></li><li><p>DHCP相关概念：地址池/作用域：（IP、子网掩码、网关、DNS、租期），DHCP协议端口事UDP 67/68</p></li><li><p>DHCP优点：减少工作量、避免IP冲突、提高地址利用率</p></li><li><p>DHCP原理：也称为DHCP租约过程，分为4个步骤</p><p>1）发送DHCP Discovery广播包：客户机广播请求IP地址（包含客户机的MAC地址）</p><p>2）服务器响应DHCP Offer广播包：服务器响应提供的IP地址（但无子网掩码、网关等参数）</p><p>3）响应DHCP Request广播包：客户机选择IP（也可认为确认使用哪个IP）</p><p>4）发送DHCP ACK广播包：服务器确定了租约，并提供网卡详细参数IP、掩码、网关、DNS、租期等</p></li><li><p>DHCP续约：当50%过后，客户机会再次发送DHCP Request包，进行续约，如果服务器无响应，则继续使用并在87.5%再次发送DHCP Request包，进行续约，如仍然无响应，并释放IP地址，及重新发送DHCP Request广播包来获取IP地址，当无任何服务器响应时，自动给自己分配一个169.254.X.X/16，属于全球统一无效地址，用于临时内网通信！</p></li><li><p>部署DHCP服务器</p><p>1）IP地址固定（服务器必须固定IP地址）</p><p>2）安装DHCP服务插件</p><p>3）新建作用域及作用域选项</p><p>4）激活</p><p>5）客户及验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipconfig   &#x2F;release  释放IP(取消租约，或者改为手动配置IP，也可以释放租约)</span><br><span class="line">ipconfig   &#x2F;renew    重新获取IP(有IP时发送Request续约无IP时发送Discovery重新获取)</span><br></pre></td></tr></table></figure></li><li><p>地址保留：针对指定的MAC地址，固定动态分配IP地址</p></li><li><p>选项优先级：作用域选项&gt;服务器选项</p><p>//当服务器上有多个作用域时，可以在服务器选项上设置DNS服务器</p></li><li><p>DHCP备份</p></li><li><p>DHCP攻机与防御：</p><p>1）攻击DHCP服务器：频繁的发送伪装的DHCP请求，直到将DHCP地址池资源耗尽</p><p>​      防御：在交换机上（管理型）的端口做动态MAC地址绑定</p><p>2）伪装DHCP服务器攻击客户机：hacker通过将自己部署为DHCP服务器,为客户机提供非法IP地址</p><p>​      防御：在交换机上，除合法的DHCP服务器所在接口外，全部设置为禁止发送DHCP Offer包</p></li><li><p>常见小问题</p></li></ol><h3 id="4-DNS部署与安全"><a href="#4-DNS部署与安全" class="headerlink" title="4.DNS部署与安全"></a>4.DNS部署与安全</h3><ol><li><p>DNS：Domain Name Service（域名服务）作用：为客户及提供域名解析服务</p></li><li><p>域名组成：</p><p>1）域名组成概述：</p><p>如”<a href="http://www.sina.com.cn&quot;是一个域名,从严格意义上讲,&quot;sina.com.cn&quot;才被称为域名(全球唯一),而&quot;www&quot;是主机名./">www.sina.com.cn&quot;是一个域名，从严格意义上讲，&quot;sina.com.cn&quot;才被称为域名(全球唯一)，而&quot;www&quot;是主机名。</a></p><p>“主机名.域名”称为完全限定域名(FQDN)，一个域名下可以有多个主机，域名全球唯一，那么”主机名.域名”肯定也是全球唯一的。</p><p>以”sina.com.cn”域名为例，一般管理员在命名其主机的时候会根据其主机的功能而命名，比如网站的是www，博客的是blog，论坛的是bbs，那么对应的FQDN为<a href="http://www.sina.com.cn,blog.sina.com.cn,bbs.sina.com.cn.这么多个fqdn,然而我们只需要申请一个域名即&quot;sina.com.cn&quot;即可./">www.sina.com.cn，blog.sina.com.cn，bbs.sina.com.cn。这么多个FQDN，然而我们只需要申请一个域名即&quot;sina.com.cn&quot;即可。</a></p></li></ol><h1 id="这篇文章就到这里吧"><a href="#这篇文章就到这里吧" class="headerlink" title="这篇文章就到这里吧"></a><u><em>这篇文章就到这里吧</em></u></h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;em&gt;&lt;u&gt;我心如雷🌩&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="-Network Security" scheme="http://example.com/tags/Network-Security/"/>
    
  </entry>
  
  <entry>
    <title>2020寒假集训四(GCD)--NEFU</title>
    <link href="http://example.com/2021/01/04/2021-1-4-2020%E5%AF%92%E5%81%87%E9%9B%86%E8%AE%AD%E5%9B%9B(GCD)/"/>
    <id>http://example.com/2021/01/04/2021-1-4-2020%E5%AF%92%E5%81%87%E9%9B%86%E8%AE%AD%E5%9B%9B(GCD)/</id>
    <published>2021-01-03T16:00:00.000Z</published>
    <updated>2021-01-06T13:37:06.013Z</updated>
    
    <content type="html"><![CDATA[<p><u><em>你认真的说你喜欢白山茶❀</em></u></p><a id="more"></a><p>寒假来学习数论,在很多地方都出现了</p><h3 id="辗转相除法"><a href="#辗转相除法" class="headerlink" title="辗转相除法"></a><a href="https://baike.baidu.com/item/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/1647675?fromtitle=%E8%BE%97%E8%BD%AC%E7%9B%B8%E9%99%A4%E6%B3%95&fromid=4625352&fr=aladdin">辗转相除法</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-最大公约数和最小公倍数"><a href="#1-最大公约数和最小公倍数" class="headerlink" title="1.最大公约数和最小公倍数"></a>1.最大公约数和最小公倍数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span>  <span class="comment">//辗转相除法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,gcd(a,b),a*b/gcd(a,b));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-又见GCD"><a href="#2-又见GCD" class="headerlink" title="2. 又见GCD"></a>2. 又见GCD</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b))</span><br><span class="line">    &#123;</span><br><span class="line">        c=<span class="number">2</span>*b;  <span class="comment">//因为b是较小数,所以c最小为2*b然后向上依次加b</span></span><br><span class="line">        <span class="keyword">while</span>(c)&#123;</span><br><span class="line">            <span class="keyword">if</span>(gcd(a,c)==b)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            c+=b;  <span class="comment">//c的步长</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-多个数的最大公约数"><a href="#3-多个数的最大公约数" class="headerlink" title="3.多个数的最大公约数"></a>3.多个数的最大公约数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll a[<span class="number">11</span>],n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">            a[i+<span class="number">1</span>]=gcd(a[i],a[i+<span class="number">1</span>]);   <span class="comment">//此循环中将前两个数的最小共约数给后一个数向上推</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a[n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-多个数的最小公倍数"><a href="#4-多个数的最小公倍数" class="headerlink" title="4.多个数的最小公倍数"></a>4.多个数的最小公倍数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a[<span class="number">51</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a/gcd(a,b))*b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll a[],ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans;</span><br><span class="line">    ans=lcm(a[<span class="number">0</span>],a[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">        ans=lcm(ans,a[i]);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">        ll ans=solve(a,n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-LCM-amp-GCD"><a href="#5-LCM-amp-GCD" class="headerlink" title="5.LCM&amp;GCD"></a>5.LCM&amp;GCD</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-人见人爱gcd"><a href="#6-人见人爱gcd" class="headerlink" title="6.人见人爱gcd"></a>6.人见人爱gcd</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll t,a,b;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;t)&amp;&amp;t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">            ll ans=gcd(a,b);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a*a<span class="number">-2</span>*ans*b); <span class="comment">//a*a=x^2+y*2+2*x*y|2*ans*b=2*x*y</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-快速幂取模"><a href="#8-快速幂取模" class="headerlink" title="8.快速幂取模"></a>8.快速幂取模</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">mode</span><span class="params">(ll g,ll n,ll mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">            ans=ans*g%mod;</span><br><span class="line">        g=g*g%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;a,&amp;b,&amp;c))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,mode(a,b,c));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-库特的数学题"><a href="#9-库特的数学题" class="headerlink" title="9.库特的数学题"></a>9.库特的数学题</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">mode</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b%<span class="number">2</span>)&#123;</span><br><span class="line">            ans=ans*a%mod;</span><br><span class="line">            b--;</span><br><span class="line">        &#125;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=a*a%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n,m;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        m=mode(<span class="number">3</span>,n);</span><br><span class="line">        m*=<span class="number">2</span>;</span><br><span class="line">        m%=mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="感谢NEFUOJ"><a href="#感谢NEFUOJ" class="headerlink" title="感谢NEFUOJ"></a>感谢<a href="http://acm.nefu.edu.cn/">NEFUOJ</a></h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;u&gt;&lt;em&gt;你认真的说你喜欢白山茶❀&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>动态规划</title>
    <link href="http://example.com/2021/01/03/2021-1-3-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://example.com/2021/01/03/2021-1-3-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</id>
    <published>2021-01-02T16:00:00.000Z</published>
    <updated>2021-01-18T16:56:56.334Z</updated>
    
    <content type="html"><![CDATA[<p><u><em>你熄灭了烟说起从前👋</em></u></p><a id="more"></a><p><a href="https://www.zhihu.com/question/39948290/answer/1309260344">动态规划理解</a></p><p><strong>大概知道的动规的思想：状态转移式+保存</strong></p><h4 id="1-三角形最大和-课件最后一种写法将二维转化为一维"><a href="#1-三角形最大和-课件最后一种写法将二维转化为一维" class="headerlink" title="1.三角形最大和(课件最后一种写法将二维转化为一维)"></a>1.三角形最大和(课件最后一种写法将二维转化为一维)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 101</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> dp[MAX][MAX]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;dp[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> *maxSum;</span><br><span class="line">    maxSum=dp[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            maxSum[j]=max(maxSum[j],maxSum[j+<span class="number">1</span>])+dp[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,maxSum[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-最长上升子序列"><a href="#2-最长上升子序列" class="headerlink" title="2.最长上升子序列"></a>2.最长上升子序列</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> maxlen[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        maxlen[i]=<span class="number">1</span>;    <span class="comment">//每一种情况默认加上本身的情况</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;a[j])</span><br><span class="line">                maxlen[i]=max(maxlen[i],maxlen[j]+<span class="number">1</span>);   <span class="comment">//如果条件成立就是j的情况+1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> maxn=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(maxlen[i]&gt;maxn)</span><br><span class="line">            maxn=maxlen[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,maxn);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-最佳加法表达式"><a href="#3-最佳加法表达式" class="headerlink" title="3.最佳加法表达式"></a>3.最佳加法表达式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;u&gt;&lt;em&gt;你熄灭了烟说起从前👋&lt;/em&gt;&lt;/u&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>C语言学习笔记</title>
    <link href="http://example.com/2020/12/26/2020-12-26-C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2020/12/26/2020-12-26-C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-25T16:00:00.000Z</published>
    <updated>2021-01-17T14:38:23.325Z</updated>
    
    <content type="html"><![CDATA[<p>🤡</p><a id="more"></a><h3 id="1-单链表的建立函数-“creatlink”"><a href="#1-单链表的建立函数-“creatlink”" class="headerlink" title="1.单链表的建立函数(“creatlink”)"></a>1.单链表的建立函数(“creatlink”)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> data;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">linknode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> linknode *linklist;</span><br><span class="line"><span class="function">linklist <span class="title">creatlink</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linklist head,tail,q;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    head=tail=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入整数序列（以0为结束）:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">while</span>(x!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        q=(linklist)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">        q-&gt;data=x;</span><br><span class="line">        <span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">            head=tail=q;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            tail-&gt;next=q;</span><br><span class="line">            tail=q;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tail!=<span class="literal">NULL</span>)</span><br><span class="line">        tail-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-单链表的输出函数-void-print-linklist-head"><a href="#2-单链表的输出函数-void-print-linklist-head" class="headerlink" title="2.单链表的输出函数(void print(linklist head))"></a>2.单链表的输出函数(void print(linklist head))</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(linklist head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linklist p=head;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;List:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>,p-&gt;data);</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-单链表的查找函数-“linklist-searchlink”"><a href="#3-单链表的查找函数-“linklist-searchlink”" class="headerlink" title="3.单链表的查找函数(“linklist searchlink”)"></a>3.单链表的查找函数(“linklist searchlink”)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">linklist <span class="title">searchlink</span><span class="params">(linklist head,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linklist p=head;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>&amp;&amp;p-&gt;data!=x)</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Linklist-All"><a href="#Linklist-All" class="headerlink" title="Linklist All"></a>Linklist All</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">linknode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> linknode* linklist;</span><br><span class="line"><span class="function">linklist <span class="title">creatlink</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linklist head,tail,q;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    head=tail=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入整数序列(以0为结束):\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">while</span>(x!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        q=(linklist)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linknode));</span><br><span class="line">        q-&gt;data=x;</span><br><span class="line">        <span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">            head=tail=q;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            tail-&gt;next=q;</span><br><span class="line">            tail=q;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tail!=<span class="literal">NULL</span>)</span><br><span class="line">        tail-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(linklist head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linklist p=head;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;List:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>,p-&gt;data);</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">linklist <span class="title">searchlink</span><span class="params">(linklist head,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    linklist p=head;</span><br><span class="line">    <span class="keyword">while</span>(p!=<span class="literal">NULL</span>&amp;&amp;p-&gt;data!=x)</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    linklist head,p;</span><br><span class="line">    head=creatlink();</span><br><span class="line">    print(head);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入要查找的结点值:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    p=searchlink(head,x);</span><br><span class="line">    <span class="keyword">if</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;查找成功！\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;查找失败！\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Last-大一上学期C语言考试最后一题"><a href="#Last-大一上学期C语言考试最后一题" class="headerlink" title="Last.大一上学期C语言考试最后一题"></a>Last.大一上学期C语言考试最后一题</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXNAMELEN 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXTELLEN 12 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXADDRESSLEN 100</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">telephone_list</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[MAXNAMELEN];</span><br><span class="line"><span class="keyword">char</span> tel[MAXTELLEN];</span><br><span class="line"><span class="keyword">char</span> address[MAXADDRESSLEN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">telephone_list</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">telephone_list</span> <span class="title">list</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">list</span> *linklist;</span><br><span class="line"></span><br><span class="line"><span class="function">linklist <span class="title">creatlink</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">linklist head,tail,q;</span><br><span class="line">head=tail=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">30</span>],b[<span class="number">13</span>],c[<span class="number">101</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)&#123;</span><br><span class="line">gets(a);</span><br><span class="line">gets(b);</span><br><span class="line">gets(c);</span><br><span class="line">q=(linklist)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="built_in">list</span>));</span><br><span class="line"><span class="built_in">strcpy</span>(q-&gt;name,a);</span><br><span class="line"><span class="built_in">strcpy</span>(q-&gt;tel,b);</span><br><span class="line"><span class="built_in">strcpy</span>(q-&gt;address,c);</span><br><span class="line"><span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">head=tail=q;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tail-&gt;next=q;</span><br><span class="line">tail=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tail!=<span class="literal">NULL</span>)</span><br><span class="line">tail-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">linklist <span class="title">searchlink</span><span class="params">(linklist head,<span class="keyword">char</span> d[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">linklist p=head;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>&amp;&amp;(<span class="built_in">strcmp</span>(p-&gt;name,d))!=<span class="number">0</span>)&#123;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">linklist <span class="title">dellink</span><span class="params">(linklist head,<span class="keyword">char</span> e[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">linklist pre=<span class="literal">NULL</span>,p=head;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>&amp;&amp;(<span class="built_in">strcmp</span>(p-&gt;name,e)!=<span class="number">0</span>))&#123;</span><br><span class="line">pre=p;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p)&#123;</span><br><span class="line"><span class="keyword">if</span>(pre==<span class="literal">NULL</span>)</span><br><span class="line">head=head-&gt;next;</span><br><span class="line"><span class="keyword">else</span> pre-&gt;next=p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(linklist head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">linklist p=head;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s %s\n&quot;</span>,p-&gt;name,p-&gt;tel,p-&gt;address);</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">linklist head,p;</span><br><span class="line">head=creatlink();</span><br><span class="line"><span class="keyword">char</span> d[<span class="number">31</span>],e[<span class="number">31</span>];</span><br><span class="line">gets(d);</span><br><span class="line">p=searchlink(head,d);</span><br><span class="line">print(head);</span><br><span class="line"><span class="keyword">if</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;查找成功!\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s %s\n&quot;</span>,p-&gt;name,p-&gt;tel,p-&gt;address);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;查找失败!\n&quot;</span>);</span><br><span class="line">gets(e);</span><br><span class="line">head=dellink(head,e);</span><br><span class="line">print(head);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;🤡&lt;/p&gt;</summary>
    
    
    
    
    <category term="-Course Learning" scheme="http://example.com/tags/Course-Learning/"/>
    
  </entry>
  
  <entry>
    <title>圣诞节月赛</title>
    <link href="http://example.com/2020/12/25/2020-12-25-%E5%9C%A3%E8%AF%9E%E8%8A%82%E6%9C%88%E8%B5%9B/"/>
    <id>http://example.com/2020/12/25/2020-12-25-%E5%9C%A3%E8%AF%9E%E8%8A%82%E6%9C%88%E8%B5%9B/</id>
    <published>2020-12-24T16:00:00.000Z</published>
    <updated>2020-12-29T04:29:11.614Z</updated>
    
    <content type="html"><![CDATA[<p><strong><del>为啥和新风杯一样的结果啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊</del></strong></p><a id="more"></a><h3 id="A-分糖果-HDU-2034集合的减法A-B-HDU-2034"><a href="#A-分糖果-HDU-2034集合的减法A-B-HDU-2034" class="headerlink" title="A.分糖果(HDU-2034集合的减法A-B)(HDU-2034)"></a>A.分糖果(HDU-2034集合的减法A-B)(HDU-2034)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)    <span class="comment">//题目要求按从小到大顺序输出</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;a[j])</span><br><span class="line">            &#123;</span><br><span class="line">                t=a[i];</span><br><span class="line">                a[i]=a[j];</span><br><span class="line">                a[j]=t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">101</span>]=&#123;<span class="number">0</span>&#125;,b[<span class="number">101</span>]=&#123;<span class="number">0</span>&#125;,c[<span class="number">101</span>]=&#123;<span class="number">0</span>&#125;,k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> flag1=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i]==b[j])</span><br><span class="line">                flag1++;</span><br><span class="line">            <span class="keyword">if</span>(flag1==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                c[k]=a[i];</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NULL\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            sort(c,k);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,c[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-简单深搜dp没做来啊啊啊啊啊啊啊啊急死我了-HDU"><a href="#B-简单深搜dp没做来啊啊啊啊啊啊啊啊急死我了-HDU" class="headerlink" title="B.简单深搜dp没做来啊啊啊啊啊啊啊啊急死我了(HDU-)"></a>B.简单深搜dp没做来啊啊啊啊啊啊啊啊急死我了(HDU-)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">1010</span>],<span class="built_in">map</span>[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-用一种特殊情况即可"><a href="#C-用一种特殊情况即可" class="headerlink" title="C.用一种特殊情况即可"></a>C.用一种特殊情况即可</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> n,k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        <span class="keyword">char</span> ch=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-k;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,ch+i%<span class="number">3</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-归并排序-求逆序对个数-POJ"><a href="#D-归并排序-求逆序对个数-POJ" class="headerlink" title="D.归并排序(求逆序对个数)(POJ-)"></a>D.归并排序(求逆序对个数)(POJ-)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="E-求唯一个数"><a href="#E-求唯一个数" class="headerlink" title="E.求唯一个数"></a>E.求唯一个数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一般做法</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">int</span> d[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n)&amp;&amp;n)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异或做法</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n)&amp;&amp;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> max=<span class="number">0</span>,x;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">            max^=x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,max);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-贪心"><a href="#F-贪心" class="headerlink" title="F.贪心"></a>F.贪心</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    ll a,b,x,y,n;</span><br><span class="line">    ll aa,bb,ans;</span><br><span class="line">    <span class="keyword">for</span>(;t&gt;<span class="number">0</span>;t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld%lld%lld&quot;</span>,&amp;a,&amp;b,&amp;x,&amp;y,&amp;n);</span><br><span class="line">        aa=a-n;</span><br><span class="line">        <span class="keyword">if</span>(aa&lt;x)</span><br><span class="line">            aa=x;</span><br><span class="line">        bb=b-(n-(a-aa));</span><br><span class="line">        <span class="keyword">if</span>(bb&lt;y)</span><br><span class="line">            bb=y;</span><br><span class="line">        ans=aa*bb;</span><br><span class="line">        bb=b-n;</span><br><span class="line">        <span class="keyword">if</span>(bb&lt;y)</span><br><span class="line">            bb=y;</span><br><span class="line">        aa=a-(n-(b-bb));</span><br><span class="line">        <span class="keyword">if</span>(aa&lt;x)</span><br><span class="line">            aa=x;</span><br><span class="line">        <span class="keyword">if</span>(ans&gt;aa*bb)</span><br><span class="line">            ans=aa*bb;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="G-Google的恐龙"><a href="#G-Google的恐龙" class="headerlink" title="G.Google的恐龙"></a>G.Google的恐龙</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    ll x;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6lf\n&quot;</span>,(n<span class="number">-1</span>)*n/<span class="number">2.0</span>/m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;del&gt;为啥和新风杯一样的结果啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>东北林业大学第15届校赛（大一组）赛后题解与思考</title>
    <link href="http://example.com/2020/12/22/2020-12-22-%E4%B8%9C%E5%8C%97%E6%9E%97%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%AC%AC15%E5%B1%8A%E6%A0%A1%E8%B5%9B%EF%BC%88%E5%A4%A7%E4%B8%80%E7%BB%84%EF%BC%89%E8%B5%9B%E5%90%8E%E6%80%9D%E8%80%83/"/>
    <id>http://example.com/2020/12/22/2020-12-22-%E4%B8%9C%E5%8C%97%E6%9E%97%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%AC%AC15%E5%B1%8A%E6%A0%A1%E8%B5%9B%EF%BC%88%E5%A4%A7%E4%B8%80%E7%BB%84%EF%BC%89%E8%B5%9B%E5%90%8E%E6%80%9D%E8%80%83/</id>
    <published>2020-12-21T16:00:00.000Z</published>
    <updated>2020-12-23T13:05:04.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="比赛链接东北林业大学第15届校赛（大一组）"><a href="#比赛链接东北林业大学第15届校赛（大一组）" class="headerlink" title="比赛链接东北林业大学第15届校赛（大一组）"></a>比赛链接<a href="http://acm.nefu.edu.cn/contestShow.php">东北林业大学第15届校赛（大一组）</a></h1><a id="more"></a><h3 id="A-三角形面积-easy"><a href="#A-三角形面积-easy" class="headerlink" title="A.三角形面积(easy)"></a>A.三角形面积(easy)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a,b,c,p;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    p=<span class="number">0.5</span>*(a+b+c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n&quot;</span>,<span class="built_in">sqrt</span>(p*(p-a)*(p-b)*(p-c)));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-最大质因子-medium"><a href="#B-最大质因子-medium" class="headerlink" title="B.最大质因子(medium)"></a>B.最大质因子(medium)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getprime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n&gt;<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">n/=i;</span><br><span class="line">res=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,getprime(n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-杨辉三角-easy-amp-二维数组做法"><a href="#C-杨辉三角-easy-amp-二维数组做法" class="headerlink" title="C.杨辉三角(easy&amp;二维数组做法)"></a>C.杨辉三角(easy&amp;二维数组做法)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">31</span>][<span class="number">31</span>];</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>,a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>,a[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">1</span>)</span><br><span class="line">a[i][j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">2</span>&amp;&amp;j&gt;<span class="number">1</span>)</span><br><span class="line">a[i][j]=a[i<span class="number">-1</span>][j]+a[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-”nefu”的数目-medium"><a href="#D-”nefu”的数目-medium" class="headerlink" title="D.”nefu”的数目(medium)"></a>D.”nefu”的数目(medium)</h3><p>这题一开始没有看懂题目,其实只需要用暴力枚举n-e-f-u个数的方法就行了,好蠢···</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">55</span>];</span><br><span class="line">    gets(a);</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="comment">//开始枚举</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;len;j++)</span><br><span class="line">                <span class="keyword">if</span>(a[j]==<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;len;k++)</span><br><span class="line">                        <span class="keyword">if</span>(a[k]==<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> q=k+<span class="number">1</span>;q&lt;len;q++)</span><br><span class="line">                                <span class="keyword">if</span>(a[q]==<span class="string">&#x27;u&#x27;</span>)</span><br><span class="line">                                    count++;<span class="comment">//计数</span></span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E-最小修改次数-difficult"><a href="#E-最小修改次数-difficult" class="headerlink" title="E.最小修改次数(difficult)"></a>E.最小修改次数(difficult)</h3><p><a href="https://www.cnblogs.com/huansky/p/13488234.html">滑动窗口算法实现</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&lt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">1003</span>],b[<span class="number">1003</span>];</span><br><span class="line">    gets(a);</span><br><span class="line">    gets(b);</span><br><span class="line">    <span class="keyword">int</span> l1=<span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">int</span> l2=<span class="built_in">strlen</span>(b);</span><br><span class="line">    <span class="keyword">if</span>(l1==l2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l1;i++)</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=b[i])</span><br><span class="line">                count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        count=<span class="number">10000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=l1-l2;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l2;j++)    <span class="comment">//滑动窗口算法实现主体</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j+i]!=b[j])</span><br><span class="line">                    k++;</span><br><span class="line">            &#125;</span><br><span class="line">            count=min(k,count);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-字典序-medium"><a href="#F-字典序-medium" class="headerlink" title="F.字典序(medium)"></a>F.字典序(medium)</h3><p>主要是难想到8进制字典序的比较方法(按照八进制最大数来比较)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n/<span class="number">32767</span>) <span class="built_in">printf</span>(<span class="string">&quot;77777\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n/<span class="number">32760</span>) &#123;a=<span class="number">7777</span>*<span class="number">10</span>+n%<span class="number">32760</span>;<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="number">4095</span>) <span class="built_in">printf</span>(<span class="string">&quot;7777\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n/<span class="number">4088</span>) &#123;a=<span class="number">777</span>*<span class="number">10</span>+n%<span class="number">4088</span>;<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);&#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="number">511</span>) <span class="built_in">printf</span>(<span class="string">&quot;777\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(n/<span class="number">504</span>) &#123;a=<span class="number">77</span>*<span class="number">10</span>+n%<span class="number">504</span>;<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);&#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="number">63</span>) <span class="built_in">printf</span>(<span class="string">&quot;77\n&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(n/<span class="number">56</span>) &#123;a=<span class="number">7</span>*<span class="number">10</span>+n%<span class="number">56</span>;<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);&#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(n/<span class="number">7</span>) <span class="built_in">printf</span>(<span class="string">&quot;7\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="G-最小差值-水题"><a href="#G-最小差值-水题" class="headerlink" title="G.最小差值(水题)"></a>G.最小差值(水题)</h3><p>一开始给这个图搞蒙了,以为是道难题,这题和新风杯2020级的求平衡位置那题一样</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a[<span class="number">200001</span>];</span><br><span class="line"><span class="function">ll <span class="title">min</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&lt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n,sum1=<span class="number">0</span>,sum2=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,a+i);</span><br><span class="line">        sum2+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ll k,minn=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k=<span class="built_in">abs</span>(sum2-sum1);</span><br><span class="line">        minn=min(k,minn);</span><br><span class="line">        sum1+=a[i];</span><br><span class="line">        sum2-=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,minn);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="H-染色方案-difficult"><a href="#H-染色方案-difficult" class="headerlink" title="H.染色方案(difficult)"></a>H.染色方案(difficult)</h3><p>这题我没想出来,所以就是difficult,还没有想出来,等学会深度搜索再回来看看</p><h3 id="I-最大正方形-difficult"><a href="#I-最大正方形-difficult" class="headerlink" title="I.最大正方形(difficult)"></a>I.最大正方形(difficult)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;a[j])</span><br><span class="line">            &#123;</span><br><span class="line">                t=a[i];</span><br><span class="line">                a[i]=a[j];</span><br><span class="line">                a[j]=t;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=n<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&gt;=i) k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k&gt;=i) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            k=i<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="J-最大值-medium"><a href="#J-最大值-medium" class="headerlink" title="J.最大值(medium)"></a>J.最大值(medium)</h3><p>这题我一直觉得我的做法没错但就是WA,其实是自己蠢了没有想到几个值相等且都是最大值的情况🤡</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">200006</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> maxxx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">        maxxx=max(maxxx,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> p=<span class="number">0</span>,k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(maxxx==a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            p++;</span><br><span class="line">            k=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> maxxxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==k) <span class="keyword">continue</span>;</span><br><span class="line">            maxxxx=max(maxxxx,a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,maxxxx);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,maxxx);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,maxxx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="K-循环排列-difficult"><a href="#K-循环排列-difficult" class="headerlink" title="K.循环排列(difficult)"></a>K.循环排列(difficult)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="L-库特与围棋-difficult"><a href="#L-库特与围棋-difficult" class="headerlink" title="L.库特与围棋(difficult)"></a>L.库特与围棋(difficult)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">    ll a=<span class="built_in">sqrt</span>(n);</span><br><span class="line">    ll ans=<span class="number">4</span>*a;</span><br><span class="line">    ll b=n-a*a;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b&gt;<span class="number">0</span>&amp;&amp;b&lt;=a) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans+<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b&gt;a) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans+<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Thanks for <a href="http://acm.nefu.edu.cn/index.php">NEFUOJ</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;比赛链接东北林业大学第15届校赛（大一组）&quot;&gt;&lt;a href=&quot;#比赛链接东北林业大学第15届校赛（大一组）&quot; class=&quot;headerlink&quot; title=&quot;比赛链接东北林业大学第15届校赛（大一组）&quot;&gt;&lt;/a&gt;比赛链接&lt;a href=&quot;http://acm.nefu.edu.cn/contestShow.php&quot;&gt;东北林业大学第15届校赛（大一组）&lt;/a&gt;&lt;/h1&gt;</summary>
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>简便方法合集</title>
    <link href="http://example.com/2020/12/22/2020-12-22-%E7%AE%80%E4%BE%BF%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/"/>
    <id>http://example.com/2020/12/22/2020-12-22-%E7%AE%80%E4%BE%BF%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/</id>
    <published>2020-12-21T16:00:00.000Z</published>
    <updated>2020-12-22T04:32:46.742Z</updated>
    
    <content type="html"><![CDATA[<h4 id="有关因数与因子问题可参考-此博客"><a href="#有关因数与因子问题可参考-此博客" class="headerlink" title="有关因数与因子问题可参考[此博客]"></a>有关因数与因子问题可参考[<a href="https://www.cnblogs.com/xiongtao/p/10878249.html">此博客</a>]</h4><a id="more"></a><h4 id="1-快速求因子个数"><a href="#1-快速求因子个数" class="headerlink" title="1.快速求因子个数"></a>1.快速求因子个数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">dcp</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll i,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i*i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ll temp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                n/=i;</span><br><span class="line">                temp++;</span><br><span class="line">            &#125;</span><br><span class="line">            ans*=(temp+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>) ans*=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;x);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ll count=0;</span></span><br><span class="line"><span class="comment">    while(x!=2)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        x=dcp(x);</span></span><br><span class="line"><span class="comment">        count++;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    printf(&quot;%lld\n&quot;,count);  求迭代次数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,dcp(x));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-快速求因数和"><a href="#2-快速求因数和" class="headerlink" title="2.快速求因数和"></a>2.快速求因数和</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i*i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                n/=i;</span><br><span class="line">                a*=i;</span><br><span class="line">            &#125;</span><br><span class="line">            s=s*(a*i<span class="number">-1</span>)/(i<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>)</span><br><span class="line">        s=s*(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum(x));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;有关因数与因子问题可参考-此博客&quot;&gt;&lt;a href=&quot;#有关因数与因子问题可参考-此博客&quot; class=&quot;headerlink&quot; title=&quot;有关因数与因子问题可参考[此博客]&quot;&gt;&lt;/a&gt;有关因数与因子问题可参考[&lt;a href=&quot;https://www.cnblogs.com/xiongtao/p/10878249.html&quot;&gt;此博客&lt;/a&gt;]&lt;/h4&gt;</summary>
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>回型矩阵</title>
    <link href="http://example.com/2020/12/21/2020-12-21-%E5%9B%9E%E5%9E%8B%E7%9F%A9%E9%98%B5/"/>
    <id>http://example.com/2020/12/21/2020-12-21-%E5%9B%9E%E5%9E%8B%E7%9F%A9%E9%98%B5/</id>
    <published>2020-12-20T16:00:00.000Z</published>
    <updated>2021-01-07T05:39:26.955Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">1</span>,y=<span class="number">0</span>,cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">101</span>][<span class="number">101</span>];</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">while</span>(cnt&lt;n*n)   <span class="comment">//模拟画笔-上下左右</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(y+<span class="number">1</span>&lt;=n&amp;&amp;!a[x][y+<span class="number">1</span>]) a[x][++y]=++cnt;  <span class="comment">//右</span></span><br><span class="line">        <span class="keyword">while</span>(x+<span class="number">1</span>&lt;=n&amp;&amp;!a[x+<span class="number">1</span>][y]) a[++x][y]=++cnt;  <span class="comment">//下</span></span><br><span class="line">        <span class="keyword">while</span>(y<span class="number">-1</span>&gt;=<span class="number">1</span>&amp;&amp;!a[x][y<span class="number">-1</span>]) a[x][--y]=++cnt;  <span class="comment">//左</span></span><br><span class="line">        <span class="keyword">while</span>(x<span class="number">-1</span>&gt;=<span class="number">1</span>&amp;&amp;!a[x<span class="number">-1</span>][y]) a[--x][y]=++cnt;  <span class="comment">//上</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i][j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;</summary>
      
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>编写头文件里的power函数,并优化(快速幂)</title>
    <link href="http://example.com/2020/12/20/2020-12-19-%E5%BF%AB%E9%80%9F%E5%B9%82(power)/"/>
    <id>http://example.com/2020/12/20/2020-12-19-%E5%BF%AB%E9%80%9F%E5%B9%82(power)/</id>
    <published>2020-12-19T16:00:00.000Z</published>
    <updated>2021-01-02T04:58:43.072Z</updated>
    
    <content type="html"><![CDATA[<h4 id="include-lt-math-h-gt-头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod-1e9-7然后取余我也没太清楚，可能是数据结构？"><a href="#include-lt-math-h-gt-头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod-1e9-7然后取余我也没太清楚，可能是数据结构？" class="headerlink" title="#include&lt;math.h&gt;头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod=1e9+7然后取余我也没太清楚，可能是数据结构？"></a>#include&lt;math.h&gt;头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod=1e9+7然后取余我也没太清楚，可能是数据结构？</h4><a id="more"></a><h4 id="1-最开始学C的时候写的平方求法-数据小的时候可以进行-数据大了时间会超时"><a href="#1-最开始学C的时候写的平方求法-数据小的时候可以进行-数据大了时间会超时" class="headerlink" title="1.最开始学C的时候写的平方求法(数据小的时候可以进行,数据大了时间会超时)"></a>1.最开始学C的时候写的平方求法(数据小的时候可以进行,数据大了时间会超时)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,sum=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=b;i++)</span><br><span class="line">        sum*=a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-快速幂-power"><a href="#2-快速幂-power" class="headerlink" title="2.快速幂(power)"></a>2.快速幂(power)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll g,ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)   <span class="comment">//n是g的次方数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">            ans=ans*g%mod;</span><br><span class="line">        g=g*g%mod;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;   <span class="comment">//运用位运算将n缩小两倍</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n,g;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;g,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,power(g,n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;include-lt-math-h-gt-头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod-1e9-7然后取余我也没太清楚，可能是数据结构？&quot;&gt;&lt;a href=&quot;#include-lt-math-h-gt-头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod-1e9-7然后取余我也没太清楚，可能是数据结构？&quot; class=&quot;headerlink&quot; title=&quot;#include&amp;lt;math.h&amp;gt;头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod=1e9+7然后取余我也没太清楚，可能是数据结构？&quot;&gt;&lt;/a&gt;#include&amp;lt;math.h&amp;gt;头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod=1e9+7然后取余我也没太清楚，可能是数据结构？&lt;/h4&gt;</summary>
    
    
    
    
    <category term="-Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>Python初体验</title>
    <link href="http://example.com/2020/12/17/2020-12-17-Python%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://example.com/2020/12/17/2020-12-17-Python%E5%88%9D%E4%BD%93%E9%AA%8C/</id>
    <published>2020-12-16T16:00:00.000Z</published>
    <updated>2021-01-09T06:28:16.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-类型"><a href="#1-类型" class="headerlink" title="1.类型"></a>1.类型</h3><table><thead><tr><th align="center">字符型</th><th align="center">整数型</th><th align="center">浮点数型</th><th align="center">字符串型</th></tr></thead><tbody><tr><td align="center"><strong>布尔型</strong></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="注：Python注重缩进"><a href="#注：Python注重缩进" class="headerlink" title="注：Python注重缩进"></a>注：Python注重缩进</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-类型&quot;&gt;&lt;a href=&quot;#1-类型&quot; class=&quot;headerlink&quot; title=&quot;1.类型&quot;&gt;&lt;/a&gt;1.类型&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;字符型&lt;/th&gt;
&lt;th align=&quot;cente</summary>
      
    
    
    
    
    <category term="-Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>指针编写函数invstr--字符串逆序存放输出</title>
    <link href="http://example.com/2020/12/17/2020-12-17-%E6%8C%87%E9%92%88%E7%BC%96%E5%86%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F%E5%AD%98%E6%94%BE%E8%BE%93%E5%87%BA/"/>
    <id>http://example.com/2020/12/17/2020-12-17-%E6%8C%87%E9%92%88%E7%BC%96%E5%86%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F%E5%AD%98%E6%94%BE%E8%BE%93%E5%87%BA/</id>
    <published>2020-12-16T16:00:00.000Z</published>
    <updated>2020-12-17T08:23:19.579Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;         //引入库函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">invstr</span><span class="params">(<span class="keyword">char</span> *s)</span>       <span class="comment">//定义倒序存放的函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *p,t;</span><br><span class="line"><span class="keyword">int</span> i,len=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>,p=s;i&lt;len/<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">t=*(p+i);</span><br><span class="line">*(p+i)=*(p+len-i<span class="number">-1</span>);     <span class="comment">//将数组的前一半与后一半对换</span></span><br><span class="line">*(p+len-i<span class="number">-1</span>)=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">10000</span>];</span><br><span class="line">gets(a);</span><br><span class="line">invstr(a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,a);     <span class="comment">//输出倒序后的数组</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>这是我用指针写的第一个函数,Keep Fighting.</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    
    <category term="Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>汇编语言</title>
    <link href="http://example.com/2020/12/17/2020-12-17-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2020/12/17/2020-12-17-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</id>
    <published>2020-12-16T16:00:00.000Z</published>
    <updated>2021-01-20T17:38:16.724Z</updated>
    
    <content type="html"><![CDATA[<p><u><em>Flag：15天学完汇编！！🤡</em></u>（现已学到第八章！！！）</p><a id="more"></a><h3 id="1-总线说明"><a href="#1-总线说明" class="headerlink" title="1.总线说明"></a>1.总线说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1）地址总线   ;若地址总线有N根地址总线，也可以说地址总线宽度炜N就可以寻找2^N的内存单元</span><br><span class="line">2）数据总线   ;进行CPU与内存或其他器件之间数据传输，它的宽度决定了数据传输的速度</span><br><span class="line">3）控制总线   ;控制总线多少决定控制的数量</span><br><span class="line">注：</span><br><span class="line">1）汇编指令是机器指令的助记符，同机器指令一一对应</span><br><span class="line">2）每一种CPU都有自己的汇编指令集</span><br><span class="line">3）CPU可以直接使用的信息在存储器中存放</span><br><span class="line">4）在存储器中指令和数据没有任何区别，都是二进制信息</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">assume cs:codesg    ;伪指令</span><br><span class="line">codesg  segment</span><br><span class="line"></span><br><span class="line">mov ax,0123h</span><br><span class="line">mov bx,0456h</span><br><span class="line">add ax,bx      ;现在还只能写出十六进制的加法</span><br><span class="line">add ax,ax</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">codesg  ends</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h3 id="2-寄存器"><a href="#2-寄存器" class="headerlink" title="2.寄存器"></a>2.寄存器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">8086的14个寄存器</span><br><span class="line">AX,BX,CX,DX,SI,DI,SP,BP,IP,CS,SS,DS,ES,PSW 以上都是16位,可以存放两个字节</span><br><span class="line">AX,BX,CX,DXT通常被用来存放一般性数据被称为通用寄存器</span><br><span class="line">AX可以分为AH和AL即High(前八)和Low(后八)位,且相互独立,BX,CX,DX同理</span><br></pre></td></tr></table></figure><p><strong>注：1Byte=8bit,1Kb=1024B,1Mb=1024Kb,1Gb=1024Kb,1Tb=1024Gb;</strong></p><h3 id="3-BX-和loop-循环"><a href="#3-BX-和loop-循环" class="headerlink" title="3.[BX]和loop(循环)"></a>3.[BX]和loop(循环)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[bx]bx里存放的是偏移地址段地址为ds中的内容即地址为ds*16+bx</span><br><span class="line">在对bx里传入数据时不能直接传入地址,必须将地址给bx然后再mov ax,[bx]即可</span><br><span class="line">偏移地址EA和段地址SA,指向（EA*16+SA）</span><br><span class="line">;inc为自增,mov为赋值,sub为减法,add为加法,push为出栈,pop为入栈</span><br><span class="line">cx里默认存放loop循环次数,并且loop所标识的标号要在loop的前面</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">;例子1：求2^12用loop</span><br><span class="line">assumecs:code</span><br><span class="line">codesegment</span><br><span class="line">start:</span><br><span class="line"></span><br><span class="line">mov ax,2</span><br><span class="line">mov cx,11</span><br><span class="line">s:add ax,ax</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax,4c00H</span><br><span class="line">int 21H</span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line">endstart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">;例子2：计算123*236的值loop（注意：数值不加H表示十进制）（加快速度可以将ax与cx值交换）</span><br><span class="line">assumecs:code</span><br><span class="line">codesegment</span><br><span class="line"></span><br><span class="line">start:</span><br><span class="line">mov ax,0</span><br><span class="line">mov cx,236</span><br><span class="line">s:add ax,123</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line">code ends</span><br><span class="line">endstart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">;例子3：计算ffff:0~ffff:b单元中数据的和，结果储存在dx中</span><br><span class="line">assumecs:code</span><br><span class="line">codesegment</span><br><span class="line"></span><br><span class="line">start:mov ax,0ffffh  ;对寄存器进行写入时数据开头不能为字母不然会出错此时要开头处加0</span><br><span class="line">mov ds,ax    ;对ds进行写入时不能直接写入</span><br><span class="line">mov bx,0</span><br><span class="line"></span><br><span class="line">mov dx,0</span><br><span class="line"></span><br><span class="line">mov cx,12</span><br><span class="line"></span><br><span class="line">s:mov al,[bx]   </span><br><span class="line">mov ah,0</span><br><span class="line">add dx,ax</span><br><span class="line">inc bx    ;bx自增1,使得指向下一单元</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line">endstart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">;例子4:将ffff:0~ffff:b段中单元中的数据拷贝到0:200~0:20b单元中</span><br><span class="line">assumecs:code</span><br><span class="line">codesegment</span><br><span class="line"></span><br><span class="line">start:</span><br><span class="line">mov cx,12;设置循环次数</span><br><span class="line">mov bx,0;清楚寄存器内容</span><br><span class="line">s:mov ax,0ffffh   </span><br><span class="line">mov ds,ax;设置指向ds*16+bx</span><br><span class="line">mov dl,[bx]</span><br><span class="line">mov ax,0020h</span><br><span class="line">mov ds,ax</span><br><span class="line">mov [bx],dl</span><br><span class="line">inc bx;bx自增1</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line">codeends</span><br><span class="line">endstart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">;例题4的改进方法,循环连续改变ds会消耗时间,可用es来保存另一个指向地址</span><br><span class="line">assumecs:code</span><br><span class="line">codesegment</span><br><span class="line"></span><br><span class="line">start:</span><br><span class="line">mov ax,0ffffh</span><br><span class="line">    mov ds,ax</span><br><span class="line">mov ax,0020h</span><br><span class="line">mov es,ax</span><br><span class="line">mov bx,0</span><br><span class="line">mov cx,12</span><br><span class="line">s:mov dl,[bx]</span><br><span class="line">mov es:[bx],dl</span><br><span class="line">inc bx</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line">code ends</span><br><span class="line">endstart</span><br></pre></td></tr></table></figure><h3 id="4-包含多个段的程序-code-ss代码段data-ds数据段stack-ss栈段"><a href="#4-包含多个段的程序-code-ss代码段data-ds数据段stack-ss栈段" class="headerlink" title="4.包含多个段的程序(code-ss代码段data-ds数据段stack-ss栈段)"></a>4.包含多个段的程序(code-ss代码段data-ds数据段stack-ss栈段)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">;dw即define word就是定义字型数据每个字型数据占用两个字节即16bits,并且定义时默认从CS:0开始定义</span><br><span class="line">;例:累加八个数据</span><br><span class="line">assumecs:code</span><br><span class="line">code    segment</span><br><span class="line">dw 0123h,0456h,0789h,0abch,0defh,0fedh,0cbah,0987h</span><br><span class="line">start:mov ax,0</span><br><span class="line">mov bx,0</span><br><span class="line">mov cx,8</span><br><span class="line">s:add ax,cs:[bx]</span><br><span class="line">add bx,2</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line">code ends</span><br><span class="line">endstart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">assuemcs:code,ds:data,ss:stack</span><br><span class="line"></span><br><span class="line">datasegment</span><br><span class="line">dw 0123h,0456h,0789h,0abch,0defh,0fedh,0cbah,0987h</span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">stacksegment</span><br><span class="line">dw 0,0,0,0,0,0,0,0</span><br><span class="line">stack ends</span><br><span class="line"></span><br><span class="line">codesegment</span><br><span class="line"></span><br><span class="line">start:mov ax,stack</span><br><span class="line">mov ss,ax</span><br><span class="line">mov sp,16</span><br><span class="line">mov ax,data</span><br><span class="line">mov ds,ax</span><br><span class="line">mov bx,0</span><br><span class="line">mov cx,8</span><br><span class="line">s:push [bx]</span><br><span class="line">add bx,2</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov bx,0</span><br><span class="line">mov cx,8</span><br><span class="line">s0:pop [bx]</span><br><span class="line">add bx,2</span><br><span class="line">loop s0;没写完</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line">code ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><h3 id="5-更灵活的定位内存地址的方法"><a href="#5-更灵活的定位内存地址的方法" class="headerlink" title="5.更灵活的定位内存地址的方法"></a>5.更灵活的定位内存地址的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">;and和or指令就是位运算中的&amp;和|运算即与非运算</span><br><span class="line">;ASCII已经学过所以直接略过，汇编语言中也可用ASCII数值(十六进制)来代替字符</span><br><span class="line">;此处还要说明一下dw与db还有dd的关系</span><br><span class="line">#dw：定义字类型变量，一个字数据占两个单元，读完一个，偏移量加2</span><br><span class="line">#db：定义字节类型变量，一个字节数据占一个单元，读完一个，偏移量加1</span><br><span class="line">#dd：定义双字类型变量，一个双字数据占据四个单元，读完一个，偏移量加4</span><br><span class="line">#上述偏移量也就是bx的步长，并且1字&#x3D;2字节&#x3D;16bits</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">;例子：编写汇编语言实现英文的大小写转换</span><br><span class="line">assumecs:code,ds:data</span><br><span class="line"></span><br><span class="line">datasegment</span><br><span class="line">db &#39;BaSiC&#39;       ;定义字节型数据</span><br><span class="line">db &#39;iNfOrMaTiOn&#39;</span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">codesegment</span><br><span class="line"></span><br><span class="line">start:mov ax,data</span><br><span class="line">mov ds,ax</span><br><span class="line"></span><br><span class="line">mov bx,0</span><br><span class="line"></span><br><span class="line">mov cx,5;第一个单词长度为5所以要循环五次</span><br><span class="line">s:mov al,[bx]</span><br><span class="line">and al,11011111B;通过&amp;运算使得小写字母ASCII值减小20H从而转换为大写</span><br><span class="line">mov [bx],al</span><br><span class="line">inc bx;步长+1</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov bx,5</span><br><span class="line"></span><br><span class="line">mov cx,11</span><br><span class="line">s0:mov al,[bx]</span><br><span class="line">or al,00100000B;与s循环同理,|运算不同,使大写字母ASCII值增加20H转化为小写字母</span><br><span class="line">mov [bx],al</span><br><span class="line">inc bx</span><br><span class="line">loop s0</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><h4 id="bx-idata-的用法"><a href="#bx-idata-的用法" class="headerlink" title="[bx+idata]的用法"></a>[bx+idata]的用法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">;mov ax,[bx+200]的多种写法</span><br><span class="line">;下列写法都与上式相同</span><br><span class="line">;mov ax,200[bx]</span><br><span class="line">;mov ax,[200+bx]</span><br><span class="line">;mov ax,[bx].200</span><br><span class="line">;例：利用[bx+idata]的方式使用数组进行大小写转换</span><br><span class="line">assume cs:code,ds:data</span><br><span class="line"></span><br><span class="line">data segment</span><br><span class="line">db &#39;BaSiC&#39;</span><br><span class="line">db &#39;MinIX&#39;</span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">code segemnt</span><br><span class="line"></span><br><span class="line">start:mov ax,data</span><br><span class="line">mov ds,ax</span><br><span class="line">mov bx,0</span><br><span class="line">mov cx,5</span><br><span class="line">s:mov al,[bx]</span><br><span class="line">and al,11011111b</span><br><span class="line">mov [bx],al</span><br><span class="line">mov al,[bx+5]</span><br><span class="line">or al,00100000b</span><br><span class="line">mov [bx+5],ax</span><br><span class="line">inc bx</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line">code ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><h4 id="5-2-SI和DI"><a href="#5-2-SI和DI" class="headerlink" title="5.2 SI和DI"></a>5.2 SI和DI</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">;SI和DI也是和bx功能相近的寄存器,但是他们不能够分成两个8位寄存器来使用</span><br><span class="line">;[bx+si+idata]的不同写法([bx+di+idata]与之相同)</span><br><span class="line">;1)[bx+idata+si] 2)[idata+bx+si] 3)idata[bx][si] 4)[bx].idata[si] 5)[bx][si].idata</span><br></pre></td></tr></table></figure><h4 id="5-3-不同寻址方式的灵活运用"><a href="#5-3-不同寻址方式的灵活运用" class="headerlink" title="5.3 不同寻址方式的灵活运用"></a>5.3 不同寻址方式的灵活运用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">;可以用dx来临时保存cx中的数值</span><br><span class="line">;如果dx也被使用,且程序中经常需要进行数据的暂存,可以将寄存器中的数据存放在内存中,但是却有些麻烦</span><br><span class="line">;最后优化可以使用栈来实现cx的存放和使用</span><br><span class="line">assume cs:code,ds:data,ss:stack</span><br><span class="line"></span><br><span class="line">data segment</span><br><span class="line">db &#39;ibm                &#39;</span><br><span class="line">db &#39;dec                &#39;</span><br><span class="line">db &#39;dos                &#39;</span><br><span class="line">db &#39;vax                &#39;</span><br><span class="line">data ends</span><br><span class="line"></span><br><span class="line">stack segment</span><br><span class="line">dw 0,0,0,0,0,0,0,0</span><br><span class="line">stack ends</span><br><span class="line"></span><br><span class="line">code segment</span><br><span class="line"></span><br><span class="line">start:mov ax,data</span><br><span class="line">mov ds,ax</span><br><span class="line">mov bx,0</span><br><span class="line"></span><br><span class="line">mov cx,4</span><br><span class="line">s0:push cx   ;即为mov dx,cx</span><br><span class="line">mov si,0</span><br><span class="line">mov cx,3</span><br><span class="line">s:mov al,[bx+si]</span><br><span class="line">and al,11011111b</span><br><span class="line">mov [bx+si],al</span><br><span class="line"></span><br><span class="line">int si</span><br><span class="line"></span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">add bx,16</span><br><span class="line">pop cx   ;即为mov cx,dx</span><br><span class="line">loop s0</span><br><span class="line"></span><br><span class="line">mov ax,4c00h</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><h3 id="6-数据处理的两个基本问题"><a href="#6-数据处理的两个基本问题" class="headerlink" title="6.数据处理的两个基本问题"></a>6.数据处理的两个基本问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">;reg用来表示寄存器,sreg来表示段寄存器</span><br><span class="line">;reg包括ax,bx,cx,dx,ah,al,bh,bl,ch,cl,dh,dl,sp,bp,si,di</span><br><span class="line">;sreg包括ds,ss,cs,es</span><br><span class="line">;8086中只有bx,si,di,bp来储存内存单元的地址</span><br><span class="line">;bx不能和bp同时调用即[bx+bp]和[si+di]是错误的用法</span><br><span class="line">;sp和bp默认段地址在ss中,bx默认段地址在ds中</span><br><span class="line">;si和di可以都被bp,bx调用</span><br><span class="line">;绝大部分机器指令都是进行数据处理的指令,可以分为三类:1）读取 2）写入 3）运算</span><br><span class="line">;SA(Segment Address)段地址EA(Effective Address)偏移地址 立即数(idata)</span><br><span class="line">;在没有寄存器名存在情况下,用操作符X ptr指明内存单元的长度,X在汇编指令中可以为word或byte</span><br><span class="line">;mov word ptr ds:[0],1  &#x2F;&#x2F;将0001送入内存单元</span><br><span class="line">;inc word ptr [bx]      &#x2F;&#x2F;将两个内存单元合并的地址自增1</span><br><span class="line">;inc word ptr ds;[0]&#x2F;&#x2F;将ds:[0]的字型数据自增1</span><br><span class="line">;add word ptr [bx],2&#x2F;&#x2F;将ds:bx指向的字型数据加2</span><br><span class="line">;在没有寄存器参与的内存单元访问指令中,用word&#x2F;byte ptr显性指明访问的内存单元长度是很有必要的</span><br><span class="line">;push指令只进行字(2个内存单元即2个字节)操作</span><br><span class="line">;一般来说,用[bx+idata+si]的方式来访问结构体中的数据,bx定位整个结构体,idata定位结构体中的某一个数据项,si定位数组项中的每个元素也有另外的写法[bx].idata和[bx].idata[si]</span><br></pre></td></tr></table></figure><p><img src="/.com//Users\Marshmello\Desktop\QQ图片20210120170701.png" alt="QQ图片20210120170701"></p><h4 id="6-1-div-division-指令"><a href="#6-1-div-division-指令" class="headerlink" title="6.1 div(division)指令"></a>6.1 div(division)指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">;div的除数有8位和16位两种,放在一个reg和内存单元中</span><br><span class="line">;div的被除数默认放在AD或(DX和AX)中,如果除数为8位,则被除数为16位,默认在AX中存放,如果除数为16位,则被除数默认在DX和AX中一起存放,并且DX存放高16位,AX存放低16位</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">;高位地方存放余数,低位存放商</span><br><span class="line">;div byte ptr ds:[0] &#x2F;&#x2F;(al)&#x3D;(ax)&#x2F;((ds)*16+0)的商,(ah)&#x3D;((ds)*16+0)的余数</span><br><span class="line">;div word ptr es:[0] &#x2F;&#x2F;(ax)&#x3D;[(dx)*10000h+(ax)]&#x2F;((es*16)+0)的商,(dx)&#x3D;[(dx)*10000h+(ax)]&#x2F;((es*16)+0)的余数</span><br><span class="line">;div byte ptr [bx+si+8] &#x2F;&#x2F;(ax)&#x3D;(ax)&#x2F;((ds)*16+(bx)+(si)+8)的商,(dx)&#x3D;(ax)&#x2F;((ds)*16+(bx)+(si)+8)的余数</span><br><span class="line">;div word ptr [bx+si+8] &#x2F;&#x2F;(ax)&#x3D;[(dx)*10000h+(ax)]&#x2F;((ds)*16+(bx)+(si)+8)的商,(dx)&#x3D;([(dx)*10000h+(ax)])&#x2F;((ds)*16+(bx)+(si)+8)的余数</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;u&gt;&lt;em&gt;Flag：15天学完汇编！！🤡&lt;/em&gt;&lt;/u&gt;（现已学到第八章！！！）&lt;/p&gt;</summary>
    
    
    
    
    <category term="-Assembly language" scheme="http://example.com/tags/Assembly-language/"/>
    
  </entry>
  
  <entry>
    <title>排序算法合集</title>
    <link href="http://example.com/2020/12/17/2020-12-17-%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%90%88%E9%9B%86/"/>
    <id>http://example.com/2020/12/17/2020-12-17-%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%90%88%E9%9B%86/</id>
    <published>2020-12-16T16:00:00.000Z</published>
    <updated>2021-01-14T05:10:42.808Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-冒泡排序-BubbleSort"><a href="#1-冒泡排序-BubbleSort" class="headerlink" title="1.冒泡排序(BubbleSort)"></a>1.冒泡排序(BubbleSort)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp=*a;</span><br><span class="line">    *a=*b;    <span class="comment">//编写交换值函数swap</span></span><br><span class="line">    *b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)      <span class="comment">//冒泡排序主题</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[j])</span><br><span class="line">        swap(&amp;a[i],&amp;a[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> a[n];</span><br><span class="line">    BubbleSort(a,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2-选择排序-SelectSort"><a href="#2-选择排序-SelectSort" class="headerlink" title="2.选择排序(SelectSort)"></a>2.选择排序(SelectSort)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp=*a;</span><br><span class="line">    *a=*b;    <span class="comment">//编写交换值函数swap</span></span><br><span class="line">    *b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> minIndex=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j]&lt;a[minIndex])</span><br><span class="line">                minIndex=j;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(&amp;a[i],&amp;a[minIndex]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10000</span>],n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">    SelectSort(a,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-插入排序-InsertSort"><a href="#3-插入排序-InsertSort" class="headerlink" title="3.插入排序(InsertSort)"></a>3.插入排序(InsertSort)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp; <span class="comment">//定义中间变量</span></span><br><span class="line">    temp=*a;</span><br><span class="line">    *a=*b;</span><br><span class="line">    *b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,temp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=a[i];</span><br><span class="line">        <span class="keyword">for</span>(j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>&amp;&amp;a[j]&gt;temp;j--)  <span class="comment">//如果条件成立就将数组前移</span></span><br><span class="line">            a[j+<span class="number">1</span>]=a[j];</span><br><span class="line">        a[j+<span class="number">1</span>]=temp;  <span class="comment">//条件不成立or循环结束将temp值放在j+1处</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10000</span>],n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">    InsertSort(a,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-快速排序-QuickSort"><a href="#4-快速排序-QuickSort" class="headerlink" title="4.快速排序(QuickSort)"></a>4.快速排序(QuickSort)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp; <span class="comment">//定义中间变量</span></span><br><span class="line">    temp=*a;</span><br><span class="line">    *a=*b;</span><br><span class="line">    *b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(left&gt;=right)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> k=a[left];  <span class="comment">//排序从左边开始比较</span></span><br><span class="line">    <span class="keyword">int</span> i=left,j=right;</span><br><span class="line">    <span class="keyword">while</span>(i!=j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(j&gt;i&amp;&amp;a[j]&gt;=k)</span><br><span class="line">            j--;</span><br><span class="line">        swap(&amp;a[i],&amp;a[j]);</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j&amp;&amp;a[i]&lt;=k)</span><br><span class="line">            i++;</span><br><span class="line">        swap(&amp;a[i],&amp;a[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    QuickSort(a,left,i<span class="number">-1</span>);</span><br><span class="line">    QuickSort(a,i+<span class="number">1</span>,right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10000</span>],n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">    QuickSort(a,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-归并排序-MergeSort"><a href="#5-归并排序-MergeSort" class="headerlink" title="5.归并排序(MergeSort)"></a>5.归并排序(MergeSort)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000</span>],b[<span class="number">10000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp=*a;</span><br><span class="line">    *a=*b;</span><br><span class="line">    *b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> mid,<span class="keyword">int</span> right,<span class="keyword">int</span> tmp[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pb=<span class="number">0</span>,p1=left,p2=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1&lt;=mid&amp;&amp;p2&lt;=right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[p1]&lt;a[p2])</span><br><span class="line">            tmp[pb++]=a[p1++];      <span class="comment">//归并排序的主体部分,将二分部分进行排序</span></span><br><span class="line">        <span class="keyword">else</span> tmp[pb++]=a[p2++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p1&lt;=mid)</span><br><span class="line">        tmp[pb++]=a[p1++];</span><br><span class="line">    <span class="keyword">while</span>(p2&lt;=right)</span><br><span class="line">        tmp[pb++]=a[p2++];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;right-left+<span class="number">1</span>;i++)   </span><br><span class="line">        a[left+i]=tmp[i];     <span class="comment">//a数组下标从left+i开始</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> tmp[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(right&gt;left)    <span class="comment">//二分数组进行排序</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">        MergeSort(a,left,mid,tmp);</span><br><span class="line">        MergeSort(a,mid+<span class="number">1</span>,right,tmp);</span><br><span class="line">        Merge(a,left,mid,right,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,a+i);</span><br><span class="line">    MergeSort(a,<span class="number">0</span>,n<span class="number">-1</span>,b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;1-冒泡排序-BubbleSort&quot;&gt;&lt;a href=&quot;#1-冒泡排序-BubbleSort&quot; class=&quot;headerlink&quot; title=&quot;1.冒泡排序(BubbleSort)&quot;&gt;&lt;/a&gt;1.冒泡排序(BubbleSort)&lt;/h4&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *a,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *b)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    temp=*a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *a=*b;    &lt;span class=&quot;comment&quot;&gt;//编写交换值函数swap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *b=temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BubbleSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[],&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,a+i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;i++)      &lt;span class=&quot;comment&quot;&gt;//冒泡排序主题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j=i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;j&amp;lt;n;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[i]&amp;gt;a[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swap(&amp;amp;a[i],&amp;amp;a[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,&amp;amp;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a[n];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BubbleSort(a,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;%d &amp;quot;&lt;/span&gt;,a[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="Programming-ACS" scheme="http://example.com/tags/Programming-ACS/"/>
    
  </entry>
  
  <entry>
    <title>WangJp_&#39;s Somethings</title>
    <link href="http://example.com/2020/12/17/About%20Tyl&amp;WJP/"/>
    <id>http://example.com/2020/12/17/About%20Tyl&amp;WJP/</id>
    <published>2020-12-16T16:00:00.000Z</published>
    <updated>2020-12-17T11:24:18.606Z</updated>
    
    <content type="html"><![CDATA[<h3 id="This-is-my-Qzone"><a href="#This-is-my-Qzone" class="headerlink" title="This is my Qzone."></a>This is my <a href="https://user.qzone.qq.com/1215627501/infocenter">Qzone</a>.</h3><h3 id="This-is-my-CSDN"><a href="#This-is-my-CSDN" class="headerlink" title="This is my CSDN."></a>This is my <a href="https://blog.csdn.net/weixin_49690846/">CSDN</a>.</h3><a id="more"></a><h3 id="He-is-my-idol-Alan-Mathison-Turing"><a href="#He-is-my-idol-Alan-Mathison-Turing" class="headerlink" title="He is my idol Alan Mathison Turing."></a>He is my idol <a href="https://baike.baidu.com/item/%E8%89%BE%E4%BC%A6%C2%B7%E9%BA%A6%E5%B8%AD%E6%A3%AE%C2%B7%E5%9B%BE%E7%81%B5/3940576?fromtitle=%E5%9B%BE%E7%81%B5&fromid=121208&fr=aladdin">Alan Mathison Turing</a>.</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome To My Github Blog\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;This-is-my-Qzone&quot;&gt;&lt;a href=&quot;#This-is-my-Qzone&quot; class=&quot;headerlink&quot; title=&quot;This is my Qzone.&quot;&gt;&lt;/a&gt;This is my &lt;a href=&quot;https://user.qzone.qq.com/1215627501/infocenter&quot;&gt;Qzone&lt;/a&gt;.&lt;/h3&gt;&lt;h3 id=&quot;This-is-my-CSDN&quot;&gt;&lt;a href=&quot;#This-is-my-CSDN&quot; class=&quot;headerlink&quot; title=&quot;This is my CSDN.&quot;&gt;&lt;/a&gt;This is my &lt;a href=&quot;https://blog.csdn.net/weixin_49690846/&quot;&gt;CSDN&lt;/a&gt;.&lt;/h3&gt;</summary>
    
    
    
    
    <category term="Welcome Everybody" scheme="http://example.com/tags/Welcome-Everybody/"/>
    
  </entry>
  
</feed>

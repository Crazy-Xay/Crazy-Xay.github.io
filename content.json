{"meta":{"title":"Tyl丶的博客","subtitle":"记录我的生活","description":"你认真的说你喜欢白山茶❀","author":"汪剑平","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"C语言学习笔记","slug":"2020-12-26-C语言学习笔记","date":"2020-12-25T16:00:00.000Z","updated":"2021-01-02T09:53:23.537Z","comments":true,"path":"2020/12/26/2020-12-26-C语言学习笔记/","link":"","permalink":"http://example.com/2020/12/26/2020-12-26-C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"1.单链表的建立函数(“linklist.h”)1234567891011121314151617181920212223242526272829303132#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;struct node&#123; int data; struct node *next;&#125;;typedef struct node linknode;typedef linknode *linklist;linklist creatlink()&#123; linklist head,tail,q; int x; head=tail=NULL; printf(&quot;请输入整数序列（以0为结束）:\\n&quot;); scanf(&quot;%d&quot;,&amp;x); while(x!=0) &#123; q=(linklist)malloc(sizeof(linknode)); q-&gt;data=x; if(head==NULL) head=tail=q; else&#123; tail-&gt;next=q; tail=q; &#125; scanf(&quot;%d&quot;,&amp;x); &#125; if(tail!=NULL) tail-&gt;next=NULL; return head;&#125; 2.单链表的输出函数(void print(linklist head))1234567891011121314#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;void print(linklist head)&#123; linklist p=head; printf(&quot;List:\\n&quot;); while(p!=NULL) &#123; printf(&quot;%5d&quot;,p-&gt;data); p=p-&gt;next; &#125; printf(&quot;\\n&quot;);&#125; 3.单链表的查找函数(“linklist searchlink”)12345678910#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;linklist searchlink(linklist head,int x)&#123; linklist p=head; while(p!=NULL&amp;&amp;p-&gt;data!=x) p=p-&gt;next; return p;&#125; Linklist All12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;struct node&#123; int data; struct node *next;&#125;;typedef struct node linknode;typedef linknode* linklist;linklist creatlink()&#123; linklist head,tail,q; int x; head=tail=NULL; printf(&quot;请输入整数序列(以0为结束):\\n&quot;); scanf(&quot;%d&quot;,&amp;x); while(x!=0) &#123; q=(linklist)malloc(sizeof(linknode)); q-&gt;data=x; if(head==NULL) head=tail=q; else&#123; tail-&gt;next=q; tail=q; &#125; scanf(&quot;%d&quot;,&amp;x); &#125; if(tail!=NULL) tail-&gt;next=NULL; return head;&#125;void print(linklist head)&#123; linklist p=head; printf(&quot;List:\\n&quot;); while(p!=NULL) &#123; printf(&quot;%5d&quot;,p-&gt;data); p=p-&gt;next; &#125; printf(&quot;\\n&quot;);&#125;linklist searchlink(linklist head,int x)&#123; linklist p=head; while(p!=NULL&amp;&amp;p-&gt;data!=x) p=p-&gt;next; return p;&#125;int main()&#123; int x; linklist head,p; head=creatlink(); print(head); printf(&quot;请输入要查找的结点值:&quot;); scanf(&quot;%d&quot;,&amp;x); p=searchlink(head,x); if(p!=NULL) printf(&quot;查找成功！\\n&quot;); else printf(&quot;查找失败！\\n&quot;); return 0;&#125;","categories":[],"tags":[{"name":"-Course Learning","slug":"Course-Learning","permalink":"http://example.com/tags/Course-Learning/"}]},{"title":"圣诞节月赛","slug":"2020-12-25-圣诞节月赛","date":"2020-12-24T16:00:00.000Z","updated":"2020-12-29T04:29:11.614Z","comments":true,"path":"2020/12/25/2020-12-25-圣诞节月赛/","link":"","permalink":"http://example.com/2020/12/25/2020-12-25-%E5%9C%A3%E8%AF%9E%E8%8A%82%E6%9C%88%E8%B5%9B/","excerpt":"为啥和新风杯一样的结果啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊","text":"为啥和新风杯一样的结果啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊 A.分糖果(HDU-2034集合的减法A-B)(HDU-2034)1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include&lt;stdio.h&gt;void sort(int a[],int n)&#123; int t; for(int i=0;i&lt;n-1;i++) &#123; for(int j=i+1;j&lt;n;j++) //题目要求按从小到大顺序输出 &#123; if(a[i]&gt;a[j]) &#123; t=a[i]; a[i]=a[j]; a[j]=t; &#125; &#125; &#125;&#125;int main()&#123; int n,m; while(~scanf(&quot;%d%d&quot;,&amp;n,&amp;m)) &#123; if(n==0&amp;&amp;m==0) return 0; int a[101]=&#123;0&#125;,b[101]=&#123;0&#125;,c[101]=&#123;0&#125;,k=0; for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,&amp;a[i]); for(int i=0;i&lt;m;i++) scanf(&quot;%d&quot;,&amp;b[i]); for(int i=0;i&lt;n;i++) &#123; int flag1=0; for(int j=0;j&lt;m;j++) if(a[i]==b[j]) flag1++; if(flag1==0) &#123; c[k]=a[i]; k++; &#125; &#125; if(k==0) printf(&quot;NULL\\n&quot;); else&#123; sort(c,k); for(int i=0;i&lt;k;i++) printf(&quot;%d &quot;,c[i]); printf(&quot;\\n&quot;); &#125; &#125; return 0;&#125; B.简单深搜dp没做来啊啊啊啊啊啊啊啊急死我了(HDU-)123456#include&lt;stdio.h&gt;int dp[1010],map[1010];int main()&#123; &#125; C.用一种特殊情况即可12345678910111213141516171819#include&lt;stdio.h&gt;int main()&#123; int t; scanf(&quot;%d&quot;,&amp;t); while(t--) &#123; int n,k; scanf(&quot;%d%d&quot;,&amp;n,&amp;k); for(int i=1;i&lt;=k;i++) printf(&quot;a&quot;); char ch=&#x27;a&#x27;; for(int i=1;i&lt;=n-k;i++) printf(&quot;%c&quot;,ch+i%3); printf(&quot;\\n&quot;); &#125; return 0;&#125; D.归并排序(求逆序对个数)(POJ-)12#include&lt;stdio.h&gt; E.求唯一个数123456789101112//一般做法#include&lt;stdio.h&gt;const int N=1000010;int d[N];int main()&#123; int n; while(~scanf(&quot;%d&quot;,&amp;n)&amp;&amp;n) &#123; &#125;&#125; 123456789101112131415161718//异或做法#include&lt;stdio.h&gt;int main()&#123; int n; while(~scanf(&quot;%d&quot;,&amp;n)&amp;&amp;n) &#123; int max=0,x; for(int i=0;i&lt;n;i++) &#123; scanf(&quot;%d&quot;,&amp;x); max^=x; &#125; printf(&quot;%d\\n&quot;,max); &#125; return 0;&#125; F.贪心123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;typedef long long ll;int main()&#123; int t; scanf(&quot;%d&quot;,&amp;t); ll a,b,x,y,n; ll aa,bb,ans; for(;t&gt;0;t--) &#123; scanf(&quot;%lld%lld%lld%lld%lld&quot;,&amp;a,&amp;b,&amp;x,&amp;y,&amp;n); aa=a-n; if(aa&lt;x) aa=x; bb=b-(n-(a-aa)); if(bb&lt;y) bb=y; ans=aa*bb; bb=b-n; if(bb&lt;y) bb=y; aa=a-(n-(b-bb)); if(aa&lt;x) aa=x; if(ans&gt;aa*bb) ans=aa*bb; printf(&quot;%lld\\n&quot;,ans); &#125; return 0;&#125; G.Google的恐龙123456789101112#include&lt;stdio.h&gt;typedef long long ll;int main()&#123; ll n,m; scanf(&quot;%lld%lld&quot;,&amp;n,&amp;m); ll x; for(ll i=0;i&lt;m;i++) scanf(&quot;%lld&quot;,&amp;x); printf(&quot;%.6lf\\n&quot;,(n-1)*n/2.0/m); return 0;&#125;","categories":[],"tags":[{"name":"-Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"}]},{"title":"东北林业大学第15届校赛（大一组）赛后题解与思考","slug":"2020-12-22-东北林业大学第15届校赛（大一组）赛后思考","date":"2020-12-21T16:00:00.000Z","updated":"2020-12-23T13:05:04.747Z","comments":true,"path":"2020/12/22/2020-12-22-东北林业大学第15届校赛（大一组）赛后思考/","link":"","permalink":"http://example.com/2020/12/22/2020-12-22-%E4%B8%9C%E5%8C%97%E6%9E%97%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%AC%AC15%E5%B1%8A%E6%A0%A1%E8%B5%9B%EF%BC%88%E5%A4%A7%E4%B8%80%E7%BB%84%EF%BC%89%E8%B5%9B%E5%90%8E%E6%80%9D%E8%80%83/","excerpt":"比赛链接东北林业大学第15届校赛（大一组）","text":"比赛链接东北林业大学第15届校赛（大一组） A.三角形面积(easy)123456789101112#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include&lt;math.h&gt;int main()&#123; double a,b,c,p; scanf(&quot;%lf%lf%lf&quot;,&amp;a,&amp;b,&amp;c); p=0.5*(a+b+c); printf(&quot;%.1lf\\n&quot;,sqrt(p*(p-a)*(p-b)*(p-c))); return 0;&#125; B.最大质因子(medium)123456789101112131415161718192021222324#include&lt;stdio.h&gt;#include&lt;string.h&gt;int getprime(int n)&#123; int i=2; int res=1; while(n&gt;2) &#123; if(n%i==0) &#123; n/=i; res=i; &#125; else i++; &#125; return res;&#125;int main()&#123; int n; scanf(&quot;%d&quot;,&amp;n); printf(&quot;%d\\n&quot;,getprime(n)); return 0;&#125; C.杨辉三角(easy&amp;二维数组做法)1234567891011121314151617181920212223#include&lt;stdio.h&gt;int main()&#123; int n; scanf(&quot;%d&quot;,&amp;n); int a[31][31]; memset(a,0,sizeof(a)); a[1][1]=1,a[2][1]=1,a[2][2]=1; for(int i=1;i&lt;=n;i++) &#123; for(int j=1;j&lt;=i;j++) &#123; if(j==1) a[i][j]=1; if(i&gt;2&amp;&amp;j&gt;1) a[i][j]=a[i-1][j]+a[i-1][j-1]; printf(&quot;%d &quot;,a[i][j]); &#125; printf(&quot;\\n&quot;); &#125; return 0;&#125; D.”nefu”的数目(medium)这题一开始没有看懂题目,其实只需要用暴力枚举n-e-f-u个数的方法就行了,好蠢··· 1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;#include&lt;string.h&gt;int main()&#123; int count=0; char a[55]; gets(a); int len=strlen(a); //开始枚举 for(int i=0;i&lt;len;i++) &#123; if(a[i]==&#x27;n&#x27;) &#123; for(int j=i+1;j&lt;len;j++) if(a[j]==&#x27;e&#x27;) &#123; for(int k=j+1;k&lt;len;k++) if(a[k]==&#x27;f&#x27;) &#123; for(int q=k+1;q&lt;len;q++) if(a[q]==&#x27;u&#x27;) count++;//计数 &#125; &#125; &#125; &#125; printf(&quot;%d\\n&quot;,count);&#125; E.最小修改次数(difficult)滑动窗口算法实现 12345678910111213141516171819202122232425262728293031323334353637#include&lt;stdio.h&gt;#include&lt;string.h&gt;int min(int a,int b)&#123; return a&lt;b?a:b;&#125;int main()&#123; int count=0; char a[1003],b[1003]; gets(a); gets(b); int l1=strlen(a); int l2=strlen(b); if(l1==l2) &#123; for(int i=0;i&lt;l1;i++) if(a[i]!=b[i]) count++; &#125; else &#123; count=10000; for(int i=0;i&lt;=l1-l2;i++) &#123; int k=0; for(int j=0;j&lt;l2;j++) //滑动窗口算法实现主体 &#123; if(a[j+i]!=b[j]) k++; &#125; count=min(k,count); &#125; &#125; printf(&quot;%d\\n&quot;,count); return 0;&#125; F.字典序(medium)主要是难想到8进制字典序的比较方法(按照八进制最大数来比较) 123456789101112131415161718192021222324252627282930313233#include&lt;stdio.h&gt;int main()&#123; int n,a; scanf(&quot;%d&quot;,&amp;n); if(n/32767) printf(&quot;77777\\n&quot;); else &#123; if(n/32760) &#123;a=7777*10+n%32760;printf(&quot;%d\\n&quot;,a);&#125; else if(n/4095) printf(&quot;7777\\n&quot;); else &#123; if(n/4088) &#123;a=777*10+n%4088;printf(&quot;%d\\n&quot;,a);&#125; else if(n/511) printf(&quot;777\\n&quot;); else &#123; if(n/504) &#123;a=77*10+n%504;printf(&quot;%d\\n&quot;,a);&#125; else if(n/63) printf(&quot;77\\n&quot;); else &#123; if(n/56) &#123;a=7*10+n%56;printf(&quot;%d\\n&quot;,a);&#125; else if(n/7) printf(&quot;7\\n&quot;); else &#123; printf(&quot;%d\\n&quot;,n); &#125; &#125; &#125; &#125; &#125; return 0;&#125; G.最小差值(水题)一开始给这个图搞蒙了,以为是道难题,这题和新风杯2020级的求平衡位置那题一样 1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;#include&lt;math.h&gt;typedef long long ll;ll a[200001];ll min(ll a,ll b)&#123; return a&lt;b?a:b;&#125;int main()&#123; ll n,sum1=0,sum2=0; scanf(&quot;%lld&quot;,&amp;n); for(ll i=0;i&lt;n;i++) &#123; scanf(&quot;%lld&quot;,a+i); sum2+=a[i]; &#125; ll k,minn=1e9; for(ll i=0;i&lt;n;i++) &#123; k=abs(sum2-sum1); minn=min(k,minn); sum1+=a[i]; sum2-=a[i]; &#125; printf(&quot;%lld\\n&quot;,minn); return 0;&#125; H.染色方案(difficult)这题我没想出来,所以就是difficult,还没有想出来,等学会深度搜索再回来看看 I.最大正方形(difficult)1234567891011121314151617181920212223242526272829303132333435363738#include&lt;stdio.h&gt;void sort(int *a,int n)&#123; int t; for(int i=0;i&lt;n-1;i++) for(int j=i+1;j&lt;n;j++) if(a[i]&gt;a[j]) &#123; t=a[i]; a[i]=a[j]; a[j]=t; &#125;&#125;int main()&#123; int n,k; scanf(&quot;%d&quot;,&amp;n); int a[n]; for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,a+i); for(int i=1;i&lt;=n;i++) &#123; k=0; for(int j=n-1;j&gt;=0;j--) &#123; if(a[j]&gt;=i) k++; &#125; if(k&gt;=i) continue; else &#123; k=i-1; break; &#125; &#125; printf(&quot;%d\\n&quot;,k); return 0;&#125; J.最大值(medium)这题我一直觉得我的做法没错但就是WA,其实是自己蠢了没有想到几个值相等且都是最大值的情况🤡 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include&lt;stdio.h&gt;int a[200006];int max(int a,int b)&#123; return a&gt;b?a:b;&#125;int main()&#123; int n; scanf(&quot;%d&quot;,&amp;n); int maxxx=0; for(int i=0;i&lt;n;i++) &#123; scanf(&quot;%d&quot;,a+i); maxxx=max(maxxx,a[i]); &#125; int p=0,k; for(int i=0;i&lt;n;i++) &#123; if(maxxx==a[i]) &#123; p++; k=i; &#125; &#125; if(p==1) &#123; int maxxxx=0; for(int i=0;i&lt;n;i++) &#123; if(i==k) continue; maxxxx=max(maxxxx,a[i]); &#125; for(int i=0;i&lt;n;i++) &#123; if(i==k) &#123; printf(&quot;%d\\n&quot;,maxxxx); continue; &#125; printf(&quot;%d\\n&quot;,maxxx); &#125; &#125; else &#123; for(int i=0;i&lt;n;i++) printf(&quot;%d\\n&quot;,maxxx); &#125; return 0;&#125; K.循环排列(difficult)123456#include&lt;stdio.h&gt;int main()&#123;&#125; L.库特与围棋(difficult)12345678910111213141516#include&lt;stdio.h&gt;#include&lt;math.h&gt;typedef long long ll;int main()&#123; ll n; scanf(&quot;%lld&quot;,&amp;n); ll a=sqrt(n); ll ans=4*a; ll b=n-a*a; if(b==0) printf(&quot;%lld\\n&quot;,ans); else if(b&gt;0&amp;&amp;b&lt;=a) printf(&quot;%lld\\n&quot;,ans+2); else if(b&gt;a) printf(&quot;%lld\\n&quot;,ans+4); return 0;&#125; Thanks for NEFUOJ","categories":[],"tags":[{"name":"-Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"}]},{"title":"简便方法合集","slug":"2020-12-22-简便方法合集","date":"2020-12-21T16:00:00.000Z","updated":"2020-12-22T04:32:46.742Z","comments":true,"path":"2020/12/22/2020-12-22-简便方法合集/","link":"","permalink":"http://example.com/2020/12/22/2020-12-22-%E7%AE%80%E4%BE%BF%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86/","excerpt":"有关因数与因子问题可参考[此博客]","text":"有关因数与因子问题可参考[此博客] 1.快速求因子个数12345678910111213141516171819202122232425262728293031323334353637#include&lt;stdio.h&gt;typedef long long ll;ll dcp(ll n)&#123; ll i,ans=1; for(i=2;i*i&lt;n;i++) &#123; if(n%i==0) &#123; ll temp=0; while(n%i==0) &#123; n/=i; temp++; &#125; ans*=(temp+1); &#125; &#125; if(n&gt;1) ans*=2; return ans;&#125;int main()&#123; ll x; scanf(&quot;%lld&quot;,&amp;x); /* ll count=0; while(x!=2) &#123; x=dcp(x); count++; &#125; printf(&quot;%lld\\n&quot;,count); 求迭代次数 */ printf(&quot;%lld\\n&quot;,dcp(x)); return 0;&#125; 2.快速求因数和1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;int sum(int n)&#123; int s=1; for(int i=0;i*i&lt;=n;i++) &#123; if(n%i==0) &#123; int a=1; while(n%i==0) &#123; n/=i; a*=i; &#125; s=s*(a*i-1)/(i-1); &#125; &#125; if(n&gt;1) s=s*(n+1); return s;&#125;int main()&#123; int x; scanf(&quot;%d&quot;,&amp;x); printf(&quot;%d\\n&quot;,sum(x)); return 0;&#125;","categories":[],"tags":[{"name":"-Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"}]},{"title":"回型矩阵","slug":"2020-12-21-回型矩阵","date":"2020-12-20T16:00:00.000Z","updated":"2020-12-22T04:15:06.960Z","comments":true,"path":"2020/12/21/2020-12-21-回型矩阵/","link":"","permalink":"http://example.com/2020/12/21/2020-12-21-%E5%9B%9E%E5%9E%8B%E7%9F%A9%E9%98%B5/","excerpt":"","text":"123456789101112131415161718192021222324#include&lt;stdio.h&gt;int main()&#123; int n; scanf(&quot;%d&quot;,&amp;n); int x=1,y=0,cnt=0; int a[101][101]; memset(a,0,sizeof(a)); while(cnt&lt;n*n) //模拟画笔-上下左右 &#123; while(y+1&lt;=n&amp;&amp;!a[x][y+1]) a[x][++y]=++cnt; //右 while(x+1&lt;=n&amp;&amp;!a[x+1][y]) a[++x][y]=++cnt; //下 while(y-1&gt;=1&amp;&amp;!a[x][y-1]) a[x][--y]=++cnt; //左 while(x-1&gt;=1&amp;&amp;!a[x-1][y]) a[--x][y]=++cnt; //上 &#125; for(int i=1;i&lt;=n;i++) &#123; for(int j=1;j&lt;=n;j++) printf(&quot;%d &quot;,a[i][j]); printf(&quot;\\n&quot;); &#125; return 0;&#125;","categories":[],"tags":[{"name":"-Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"}]},{"title":"编写头文件里的power函数,并优化(快速幂)","slug":"2020-12-19-快速幂(power)","date":"2020-12-19T16:00:00.000Z","updated":"2021-01-02T04:58:43.072Z","comments":true,"path":"2020/12/20/2020-12-19-快速幂(power)/","link":"","permalink":"http://example.com/2020/12/20/2020-12-19-%E5%BF%AB%E9%80%9F%E5%B9%82(power)/","excerpt":"#include&lt;math.h&gt;头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod=1e9+7然后取余我也没太清楚，可能是数据结构？","text":"#include&lt;math.h&gt;头文件里有power函数但是可能没有快速幂快，至于为什么要定义mod=1e9+7然后取余我也没太清楚，可能是数据结构？ 1.最开始学C的时候写的平方求法(数据小的时候可以进行,数据大了时间会超时)1234567891011#include&lt;stdio.h&gt;int main()&#123; int a,b,sum=1; scanf(&quot;%d%d&quot;,&amp;a,&amp;b); for(int i=1;i&lt;=b;i++) sum*=a; printf(&quot;%d\\n&quot;,sum); return 0;&#125; 2.快速幂(power)1234567891011121314151617181920212223#include&lt;stdio.h&gt;typedef long long ll;const ll mod=1e9+7;ll power(ll g,ll n)&#123; ll ans=1; while(n) //n是g的次方数 &#123; if(n&amp;1) ans=ans*g%mod; g=g*g%mod; n&gt;&gt;=1; //运用位运算将n缩小两倍 &#125; return ans;&#125;int main()&#123; ll n,g; scanf(&quot;%lld%lld&quot;,&amp;g,&amp;n); printf(&quot;%lld\\n&quot;,power(g,n)); return 0;&#125;","categories":[],"tags":[{"name":"-Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"}]},{"title":"Python初体验","slug":"2020-12-17-Python初体验","date":"2020-12-16T16:00:00.000Z","updated":"2021-01-02T09:53:53.199Z","comments":true,"path":"2020/12/17/2020-12-17-Python初体验/","link":"","permalink":"http://example.com/2020/12/17/2020-12-17-Python%E5%88%9D%E4%BD%93%E9%AA%8C/","excerpt":"","text":"感觉python比其他语言真的简单好多(此处简单是容易写的意思)我也自己误打误撞先写了几个python代码🤡 1.百钱买百鸡123456for i in range(1, 20): for j in range(1, 33): for q in range(1, 35): if i*5+j*3+q == 100: if i+j+q*3 == 100: print(i, j, q*3) //这里pycharm两个警告我还看不懂等以后再来修改 2.求阶乘(数值范围很大)12345a=int(input())fa=1for i in range (1, a+1): fa*=i print(fa)","categories":[],"tags":[{"name":"-Python","slug":"Python","permalink":"http://example.com/tags/Python/"}]},{"title":"指针编写函数invstr--字符串逆序存放输出","slug":"2020-12-17-指针编写字符串逆序存放输出","date":"2020-12-16T16:00:00.000Z","updated":"2020-12-17T08:23:19.579Z","comments":true,"path":"2020/12/17/2020-12-17-指针编写字符串逆序存放输出/","link":"","permalink":"http://example.com/2020/12/17/2020-12-17-%E6%8C%87%E9%92%88%E7%BC%96%E5%86%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F%E5%AD%98%E6%94%BE%E8%BE%93%E5%87%BA/","excerpt":"","text":"12345678910111213141516171819202122#include&lt;stdio.h&gt;#include&lt;string.h&gt; //引入库函数void invstr(char *s) //定义倒序存放的函数&#123; char *p,t; int i,len=strlen(s); for(i=0,p=s;i&lt;len/2;i++) &#123; t=*(p+i); *(p+i)=*(p+len-i-1); //将数组的前一半与后一半对换 *(p+len-i-1)=t; &#125;&#125;int main()&#123; char a[10000]; gets(a); invstr(a); printf(&quot;%s&quot;,a); //输出倒序后的数组 return 0;&#125; 这是我用指针写的第一个函数,Keep Fighting.","categories":[],"tags":[{"name":"Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"}]},{"title":"汇编语言","slug":"2020-12-17-汇编语言","date":"2020-12-16T16:00:00.000Z","updated":"2021-01-02T09:50:42.748Z","comments":true,"path":"2020/12/17/2020-12-17-汇编语言/","link":"","permalink":"http://example.com/2020/12/17/2020-12-17-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/","excerpt":"","text":"12345678910111213assume cs:codesg &#x2F;&#x2F;伪指令codesg segmentmov ax,0123hmov bx,0456hadd ax,bx &#x2F;&#x2F;现在还只能写出十六进制的加法add ax,axmov ax,4c00hint 21hcodesg endsend 2020-12-17汇编语言loop 寄存器地址设置寒假再看","categories":[],"tags":[{"name":"-Assembly language","slug":"Assembly-language","permalink":"http://example.com/tags/Assembly-language/"}]},{"title":"排序算法合集","slug":"2020-12-17-排序算法合集","date":"2020-12-16T16:00:00.000Z","updated":"2020-12-18T10:09:09.140Z","comments":true,"path":"2020/12/17/2020-12-17-排序算法合集/","link":"","permalink":"http://example.com/2020/12/17/2020-12-17-%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%90%88%E9%9B%86/","excerpt":"1.冒泡排序(BubbleSort)1234567891011121314151617181920212223242526272829#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;void swap(int *a,int *b)&#123; int temp; temp=*a; *a=*b; //编写交换值函数swap *b=temp;&#125;void BubbleSort(int a[],int n)&#123; for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,a+i); for(int i=0;i&lt;n-1;i++) //冒泡排序主题 for(int j=i+1;j&lt;n;j++) if(a[i]&gt;a[j]) swap(&amp;a[i],&amp;a[j]);&#125;int main()&#123; int n; scanf(&quot;%d&quot;,&amp;n); int a[n]; BubbleSort(a,n); for(int i=0;i&lt;n;i++) printf(&quot;%d &quot;,a[i]); return 0;&#125;","text":"1.冒泡排序(BubbleSort)1234567891011121314151617181920212223242526272829#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;void swap(int *a,int *b)&#123; int temp; temp=*a; *a=*b; //编写交换值函数swap *b=temp;&#125;void BubbleSort(int a[],int n)&#123; for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,a+i); for(int i=0;i&lt;n-1;i++) //冒泡排序主题 for(int j=i+1;j&lt;n;j++) if(a[i]&gt;a[j]) swap(&amp;a[i],&amp;a[j]);&#125;int main()&#123; int n; scanf(&quot;%d&quot;,&amp;n); int a[n]; BubbleSort(a,n); for(int i=0;i&lt;n;i++) printf(&quot;%d &quot;,a[i]); return 0;&#125; 2.选择排序(SelectSort)123456789101112131415161718192021222324252627282930313233#include&lt;stdio.h&gt;void swap(int *a,int *b)&#123; int temp; temp=*a; *a=*b; //编写交换值函数swap *b=temp;&#125;void SelectSort(int a[],int n)&#123; for(int i=0;i&lt;n;i++) &#123; int minIndex=i; for(int j=i+1;j&lt;n;j++) &#123; if(a[j]&lt;a[minIndex]) minIndex=j; swap(&amp;a[i],&amp;a[minIndex]); &#125; &#125;&#125;int main()&#123; int a[10000],n; scanf(&quot;%d&quot;,&amp;n); for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,a+i); SelectSort(a,n); for(int i=0;i&lt;n;i++) printf(&quot;%d &quot;,a[i]); return 0;&#125; 3.插入排序(InsertSort)12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;void swap(int *a,int *b)&#123; int temp; //定义中间变量 temp=*a; *a=*b; *b=temp;&#125;void InsertSort(int a[],int n)&#123; int i,j,temp; for(i=1;i&lt;n;i++) &#123; temp=a[i]; for(j=i-1;j&gt;=0&amp;&amp;a[j]&gt;temp;j--) //如果条件成立就将数组前移 a[j+1]=a[j]; a[j+1]=temp; //条件不成立or循环结束将temp值放在j+1处 &#125;&#125;int main()&#123; int a[10000],n; scanf(&quot;%d&quot;,&amp;n); for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,a+i); InsertSort(a,n); for(int i=0;i&lt;n;i++) printf(&quot;%d &quot;,a[i]); return 0;&#125; 4.快速排序(QuickSort)1234567891011121314151617181920212223242526272829303132333435363738#include&lt;stdio.h&gt;void swap(int *a,int *b)&#123; int temp; //定义中间变量 temp=*a; *a=*b; *b=temp;&#125;void QuickSort(int a[],int left,int right)&#123; if(left&gt;=right) return; int k=a[left]; //排序从左边开始比较 int i=left,j=right; while(i!=j) &#123; while(j&gt;i&amp;&amp;a[j]&gt;=k) j--; swap(&amp;a[i],&amp;a[j]); while(i&lt;j&amp;&amp;a[i]&lt;=k) i++; swap(&amp;a[i],&amp;a[j]); &#125; QuickSort(a,left,i-1); QuickSort(a,i+1,right);&#125;int main()&#123; int a[10000],n; scanf(&quot;%d&quot;,&amp;n); for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,a+i); QuickSort(a,0,n-1); for(int i=0;i&lt;n;i++) printf(&quot;%d &quot;,a[i]); return 0;&#125; 5.归并排序(MergeSort)12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include&lt;stdio.h&gt;int a[10000],b[10000];void swap(int *a,int *b)&#123; int temp; temp=*a; *a=*b; *b=temp;&#125;void Merge(int a[],int left,int mid,int right,int tmp[])&#123; int pb=0,p1=left,p2=mid+1; while(p1&lt;=mid&amp;&amp;p2&lt;=right) &#123; if(a[p1]&lt;a[p2]) tmp[pb++]=a[p1++]; //归并排序的主体部分,将二分部分进行排序 else tmp[pb++]=a[p2++]; &#125; while(p1&lt;=mid) tmp[pb++]=a[p1++]; while(p2&lt;=right) tmp[pb++]=a[p2++]; for(int i=0;i&lt;right-left+1;i++) a[left+i]=tmp[i]; //a数组下标从left+i开始&#125;void MergeSort(int a[],int left,int right,int tmp[])&#123; if(right&gt;left) //二分数组进行排序 &#123; int mid=left+(right-left)/2; MergeSort(a,left,mid,tmp); MergeSort(a,mid+1,right,tmp); Merge(a,left,mid,right,tmp); &#125;&#125;int main()&#123; int n; scanf(&quot;%d&quot;,&amp;n); for(int i=0;i&lt;n;i++) scanf(&quot;%d&quot;,a+i); MergeSort(a,0,n-1,b); for(int i=0;i&lt;n;i++) printf(&quot;%d &quot;,a[i]); return 0;&#125;","categories":[],"tags":[{"name":"Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"}]},{"title":"WangJp_'s Somethings","slug":"About Tyl&WJP","date":"2020-12-16T16:00:00.000Z","updated":"2020-12-17T11:24:18.606Z","comments":true,"path":"2020/12/17/About Tyl&WJP/","link":"","permalink":"http://example.com/2020/12/17/About%20Tyl&WJP/","excerpt":"This is my Qzone.This is my CSDN.","text":"This is my Qzone.This is my CSDN. He is my idol Alan Mathison Turing.123456#include&lt;stdio.h&gt;int main()&#123; printf(&quot;Welcome To My Github Blog\\n&quot;); return 0;&#125;","categories":[],"tags":[{"name":"Welcome Everybody","slug":"Welcome-Everybody","permalink":"http://example.com/tags/Welcome-Everybody/"}]}],"categories":[],"tags":[{"name":"-Course Learning","slug":"Course-Learning","permalink":"http://example.com/tags/Course-Learning/"},{"name":"-Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"},{"name":"-Python","slug":"Python","permalink":"http://example.com/tags/Python/"},{"name":"Programming-ACS","slug":"Programming-ACS","permalink":"http://example.com/tags/Programming-ACS/"},{"name":"-Assembly language","slug":"Assembly-language","permalink":"http://example.com/tags/Assembly-language/"},{"name":"Welcome Everybody","slug":"Welcome-Everybody","permalink":"http://example.com/tags/Welcome-Everybody/"}]}